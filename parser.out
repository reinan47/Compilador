Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    IS
    NEW
    NULL
    OBJECT
    PONTO
    SIZEOF
    STATIC
    THIS
    newLine

Grammar

Rule 0     S' -> programa
Rule 1     programa -> secaoUsing defClasse
Rule 2     programa -> secaoUsing secaoNamespace
Rule 3     programa -> defClasse
Rule 4     programa -> secaoNamespace
Rule 5     secaoUsing -> USING ID PONTO_VIRGULA
Rule 6     secaoUsing -> USING ID PONTO_VIRGULA secaoUsing
Rule 7     secaoNamespace -> NAMESPACE ID CHAVE_L defClasse CHAVE_R
Rule 8     defClasse -> PUBLIC CLASS ID CHAVE_L CHAVE_R
Rule 9     defClasse -> CLASS ID CHAVE_L CHAVE_R
Rule 10    defClasse -> PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R
Rule 11    defClasse -> CLASS ID CHAVE_L corpoClasse CHAVE_R
Rule 12    defClasse -> PUBLIC CLASS ID CHAVE_L CHAVE_R defClasse
Rule 13    defClasse -> CLASS ID CHAVE_L CHAVE_R defClasse
Rule 14    defClasse -> CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse
Rule 15    defClasse -> PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse
Rule 16    corpoClasse -> atributo
Rule 17    corpoClasse -> atributo corpoClasse
Rule 18    corpoClasse -> assinatura
Rule 19    corpoClasse -> assinatura corpoClasse
Rule 20    atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA
Rule 21    atributo -> tipo atribuicao PONTO_VIRGULA
Rule 22    atribuicao -> ID ATRIBUICAO ID
Rule 23    atribuicao -> ID ATRIBUICAO INT
Rule 24    atribuicao -> ID
Rule 25    atribuicao -> ID ATRIBUICAO chamadaMetodo
Rule 26    assinatura -> PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco
Rule 27    assinatura -> tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco
Rule 28    parametrosFormais -> tipo ID
Rule 29    parametrosFormais -> tipo ID VIRGULA parametrosFormais
Rule 30    corpoMetodo -> comandos
Rule 31    corpoMetodo -> comandos corpoMetodo
Rule 32    tipo -> INT
Rule 33    tipo -> STRING
Rule 34    tipo -> ID
Rule 35    tipo -> BOOL
Rule 36    chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R
Rule 37    parametrosReais -> ID
Rule 38    parametrosReais -> ID VIRGULA parametrosReais
Rule 39    parametrosReais -> INT
Rule 40    parametrosReais -> INT VIRGULA parametrosReais
Rule 41    comandos -> comandos1
Rule 42    comandos -> comandos2
Rule 43    comandos1 -> for1
Rule 44    comandos1 -> foreach1
Rule 45    comandos1 -> while1
Rule 46    comandos1 -> return
Rule 47    comandos1 -> atributo
Rule 48    comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
Rule 49    comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
Rule 50    comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
Rule 51    comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
Rule 52    bloco -> CHAVE_L corpoComando CHAVE_R
Rule 53    bloco -> CHAVE_L CHAVE_R
Rule 54    comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos
Rule 55    comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
Rule 56    comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco
Rule 57    comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2
Rule 58    comandos2 -> for2
Rule 59    comandos2 -> while2
Rule 60    comandos2 -> foreach2
Rule 61    corpoComando -> comandos
Rule 62    corpoComando -> corpoComando comandos
Rule 63    for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
Rule 64    for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
Rule 65    for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
Rule 66    for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
Rule 67    for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
Rule 68    for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
Rule 69    while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco
Rule 70    while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1
Rule 71    while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2
Rule 72    foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco
Rule 73    foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco
Rule 74    foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
Rule 75    foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1
Rule 76    foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
Rule 77    foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2
Rule 78    return -> RETURN ID PONTO_VIRGULA
Rule 79    return -> RETURN INT PONTO_VIRGULA
Rule 80    return -> RETURN PONTO_VIRGULA
Rule 81    exp1 -> exp1 ATRIBUICAO exp2
Rule 82    exp1 -> exp2
Rule 83    exp2 -> exp2 OR exp3
Rule 84    exp2 -> exp3
Rule 85    exp3 -> exp3 AND exp4
Rule 86    exp3 -> exp4
Rule 87    exp4 -> exp4 BIT_OR exp5
Rule 88    exp4 -> exp5
Rule 89    exp5 -> exp5 XOR exp6
Rule 90    exp5 -> exp6
Rule 91    exp6 -> exp6 BIT_AND exp7
Rule 92    exp6 -> exp7
Rule 93    exp7 -> exp7 IGUAL exp8
Rule 94    exp7 -> exp7 DIFERENTE exp8
Rule 95    exp7 -> exp8
Rule 96    exp8 -> exp8 MENOR exp9
Rule 97    exp8 -> exp8 MENOR_IGUAL exp9
Rule 98    exp8 -> exp8 MAIOR exp9
Rule 99    exp8 -> exp8 MAIOR_IGUAL exp9
Rule 100   exp8 -> exp9
Rule 101   exp9 -> exp9 SOMA exp10
Rule 102   exp9 -> exp9 SUB exp10
Rule 103   exp9 -> exp10
Rule 104   exp10 -> exp10 MUL exp11
Rule 105   exp10 -> exp10 DIV exp11
Rule 106   exp10 -> exp11
Rule 107   exp11 -> BIT_NOT exp12
Rule 108   exp11 -> NOT exp12
Rule 109   exp11 -> exp12
Rule 110   exp12 -> exp12 INCREMENTO
Rule 111   exp12 -> exp12 DECREMENTO
Rule 112   exp12 -> exp13
Rule 113   exp13 -> TRUE
Rule 114   exp13 -> FALSE
Rule 115   exp13 -> STRING
Rule 116   exp13 -> ID
Rule 117   exp13 -> chamadaMetodo
Rule 118   exp13 -> INT
Rule 119   exp13 -> PARENTESE_L exp1 PARENTESE_R

Terminals, with rules where they appear

AND                  : 85
ATRIBUICAO           : 22 23 25 81
BIT_AND              : 91
BIT_NOT              : 107
BIT_OR               : 87
BOOL                 : 35
CHAVE_L              : 7 8 9 10 11 12 13 14 15 52 53
CHAVE_R              : 7 8 9 10 11 12 13 14 15 52 53
CLASS                : 8 9 10 11 12 13 14 15
COMMENT              : 
DECREMENTO           : 111
DIFERENTE            : 94
DIV                  : 105
ELSE                 : 48 49 50 51 55 57
FALSE                : 114
FOR                  : 63 64 65 66 67 68
FOREACH              : 72 73 74 75 76 77
ID                   : 5 6 7 8 9 10 11 12 13 14 15 22 22 23 24 25 26 27 28 29 34 36 37 38 72 72 73 73 74 74 75 75 76 76 77 77 78 116
IF                   : 48 49 50 51 54 55 56 57
IGUAL                : 93
IN                   : 72 73 74 75 76 77
INCREMENTO           : 110
INT                  : 23 32 39 40 79 118
IS                   : 
MAIOR                : 98
MAIOR_IGUAL          : 99
MENOR                : 96
MENOR_IGUAL          : 97
MUL                  : 104
NAMESPACE            : 7
NEW                  : 
NOT                  : 108
NULL                 : 
OBJECT               : 
OR                   : 83
PARENTESE_L          : 26 27 36 48 49 50 51 54 55 56 57 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 119
PARENTESE_R          : 26 27 36 48 49 50 51 54 55 56 57 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 119
PONTO                : 
PONTO_VIRGULA        : 5 6 20 21 63 63 64 64 65 65 66 66 67 67 68 68 78 79 80
PUBLIC               : 8 10 12 15 20 26
RETURN               : 78 79 80
SIZEOF               : 
SOMA                 : 101
STATIC               : 
STRING               : 33 115
SUB                  : 102
THIS                 : 
TRUE                 : 113
USING                : 5 6
VIRGULA              : 29 38 40
WHILE                : 69 70 71
XOR                  : 89
error                : 
newLine              : 

Nonterminals, with rules where they appear

assinatura           : 18 19
atribuicao           : 20 21 63 64 65 66 67 68
atributo             : 16 17 47
bloco                : 26 27 49 50 51 51 56 57 63 64 69 72 73
chamadaMetodo        : 25 117
comandos             : 30 31 54 61 62
comandos1            : 41 48 48 49 50 55 65 66 70 74 75
comandos2            : 42 55 57 67 68 71 76 77
corpoClasse          : 10 11 14 15 17 19
corpoComando         : 52 62
corpoMetodo          : 31
defClasse            : 1 3 7 12 13 14 15
exp1                 : 48 49 50 51 54 55 56 57 63 63 64 64 65 65 66 66 67 67 68 68 69 70 71 81 119
exp10                : 101 102 103 104 105
exp11                : 104 105 106
exp12                : 107 108 109 110 111
exp13                : 112
exp2                 : 81 82 83
exp3                 : 83 84 85
exp4                 : 85 86 87
exp5                 : 87 88 89
exp6                 : 89 90 91
exp7                 : 91 92 93 94
exp8                 : 93 94 95 96 97 98 99
exp9                 : 96 97 98 99 100 101 102
for1                 : 43
for2                 : 58
foreach1             : 44
foreach2             : 60
parametrosFormais    : 26 27 29
parametrosReais      : 36 38 40
programa             : 0
return               : 46
secaoNamespace       : 2 4
secaoUsing           : 1 2 6
tipo                 : 20 21 26 27 28 29 63 65 67 72 74 76
while1               : 45
while2               : 59

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . secaoUsing defClasse
    (2) programa -> . secaoUsing secaoNamespace
    (3) programa -> . defClasse
    (4) programa -> . secaoNamespace
    (5) secaoUsing -> . USING ID PONTO_VIRGULA
    (6) secaoUsing -> . USING ID PONTO_VIRGULA secaoUsing
    (8) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R
    (9) defClasse -> . CLASS ID CHAVE_L CHAVE_R
    (10) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R
    (11) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R
    (12) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R defClasse
    (13) defClasse -> . CLASS ID CHAVE_L CHAVE_R defClasse
    (14) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse
    (15) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse
    (7) secaoNamespace -> . NAMESPACE ID CHAVE_L defClasse CHAVE_R

    USING           shift and go to state 5
    PUBLIC          shift and go to state 6
    CLASS           shift and go to state 7
    NAMESPACE       shift and go to state 8

    programa                       shift and go to state 1
    secaoUsing                     shift and go to state 2
    defClasse                      shift and go to state 3
    secaoNamespace                 shift and go to state 4

state 1

    (0) S' -> programa .



state 2

    (1) programa -> secaoUsing . defClasse
    (2) programa -> secaoUsing . secaoNamespace
    (8) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R
    (9) defClasse -> . CLASS ID CHAVE_L CHAVE_R
    (10) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R
    (11) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R
    (12) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R defClasse
    (13) defClasse -> . CLASS ID CHAVE_L CHAVE_R defClasse
    (14) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse
    (15) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse
    (7) secaoNamespace -> . NAMESPACE ID CHAVE_L defClasse CHAVE_R

    PUBLIC          shift and go to state 6
    CLASS           shift and go to state 7
    NAMESPACE       shift and go to state 8

    defClasse                      shift and go to state 9
    secaoNamespace                 shift and go to state 10

state 3

    (3) programa -> defClasse .

    $end            reduce using rule 3 (programa -> defClasse .)


state 4

    (4) programa -> secaoNamespace .

    $end            reduce using rule 4 (programa -> secaoNamespace .)


state 5

    (5) secaoUsing -> USING . ID PONTO_VIRGULA
    (6) secaoUsing -> USING . ID PONTO_VIRGULA secaoUsing

    ID              shift and go to state 11


state 6

    (8) defClasse -> PUBLIC . CLASS ID CHAVE_L CHAVE_R
    (10) defClasse -> PUBLIC . CLASS ID CHAVE_L corpoClasse CHAVE_R
    (12) defClasse -> PUBLIC . CLASS ID CHAVE_L CHAVE_R defClasse
    (15) defClasse -> PUBLIC . CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse

    CLASS           shift and go to state 12


state 7

    (9) defClasse -> CLASS . ID CHAVE_L CHAVE_R
    (11) defClasse -> CLASS . ID CHAVE_L corpoClasse CHAVE_R
    (13) defClasse -> CLASS . ID CHAVE_L CHAVE_R defClasse
    (14) defClasse -> CLASS . ID CHAVE_L corpoClasse CHAVE_R defClasse

    ID              shift and go to state 13


state 8

    (7) secaoNamespace -> NAMESPACE . ID CHAVE_L defClasse CHAVE_R

    ID              shift and go to state 14


state 9

    (1) programa -> secaoUsing defClasse .

    $end            reduce using rule 1 (programa -> secaoUsing defClasse .)


state 10

    (2) programa -> secaoUsing secaoNamespace .

    $end            reduce using rule 2 (programa -> secaoUsing secaoNamespace .)


state 11

    (5) secaoUsing -> USING ID . PONTO_VIRGULA
    (6) secaoUsing -> USING ID . PONTO_VIRGULA secaoUsing

    PONTO_VIRGULA   shift and go to state 15


state 12

    (8) defClasse -> PUBLIC CLASS . ID CHAVE_L CHAVE_R
    (10) defClasse -> PUBLIC CLASS . ID CHAVE_L corpoClasse CHAVE_R
    (12) defClasse -> PUBLIC CLASS . ID CHAVE_L CHAVE_R defClasse
    (15) defClasse -> PUBLIC CLASS . ID CHAVE_L corpoClasse CHAVE_R defClasse

    ID              shift and go to state 16


state 13

    (9) defClasse -> CLASS ID . CHAVE_L CHAVE_R
    (11) defClasse -> CLASS ID . CHAVE_L corpoClasse CHAVE_R
    (13) defClasse -> CLASS ID . CHAVE_L CHAVE_R defClasse
    (14) defClasse -> CLASS ID . CHAVE_L corpoClasse CHAVE_R defClasse

    CHAVE_L         shift and go to state 17


state 14

    (7) secaoNamespace -> NAMESPACE ID . CHAVE_L defClasse CHAVE_R

    CHAVE_L         shift and go to state 18


state 15

    (5) secaoUsing -> USING ID PONTO_VIRGULA .
    (6) secaoUsing -> USING ID PONTO_VIRGULA . secaoUsing
    (5) secaoUsing -> . USING ID PONTO_VIRGULA
    (6) secaoUsing -> . USING ID PONTO_VIRGULA secaoUsing

    PUBLIC          reduce using rule 5 (secaoUsing -> USING ID PONTO_VIRGULA .)
    CLASS           reduce using rule 5 (secaoUsing -> USING ID PONTO_VIRGULA .)
    NAMESPACE       reduce using rule 5 (secaoUsing -> USING ID PONTO_VIRGULA .)
    USING           shift and go to state 5

    secaoUsing                     shift and go to state 19

state 16

    (8) defClasse -> PUBLIC CLASS ID . CHAVE_L CHAVE_R
    (10) defClasse -> PUBLIC CLASS ID . CHAVE_L corpoClasse CHAVE_R
    (12) defClasse -> PUBLIC CLASS ID . CHAVE_L CHAVE_R defClasse
    (15) defClasse -> PUBLIC CLASS ID . CHAVE_L corpoClasse CHAVE_R defClasse

    CHAVE_L         shift and go to state 20


state 17

    (9) defClasse -> CLASS ID CHAVE_L . CHAVE_R
    (11) defClasse -> CLASS ID CHAVE_L . corpoClasse CHAVE_R
    (13) defClasse -> CLASS ID CHAVE_L . CHAVE_R defClasse
    (14) defClasse -> CLASS ID CHAVE_L . corpoClasse CHAVE_R defClasse
    (16) corpoClasse -> . atributo
    (17) corpoClasse -> . atributo corpoClasse
    (18) corpoClasse -> . assinatura
    (19) corpoClasse -> . assinatura corpoClasse
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (26) assinatura -> . PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco
    (27) assinatura -> . tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    CHAVE_R         shift and go to state 22
    PUBLIC          shift and go to state 26
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    corpoClasse                    shift and go to state 23
    atributo                       shift and go to state 24
    assinatura                     shift and go to state 25
    tipo                           shift and go to state 27

state 18

    (7) secaoNamespace -> NAMESPACE ID CHAVE_L . defClasse CHAVE_R
    (8) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R
    (9) defClasse -> . CLASS ID CHAVE_L CHAVE_R
    (10) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R
    (11) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R
    (12) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R defClasse
    (13) defClasse -> . CLASS ID CHAVE_L CHAVE_R defClasse
    (14) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse
    (15) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse

    PUBLIC          shift and go to state 6
    CLASS           shift and go to state 7

    defClasse                      shift and go to state 31

state 19

    (6) secaoUsing -> USING ID PONTO_VIRGULA secaoUsing .

    PUBLIC          reduce using rule 6 (secaoUsing -> USING ID PONTO_VIRGULA secaoUsing .)
    CLASS           reduce using rule 6 (secaoUsing -> USING ID PONTO_VIRGULA secaoUsing .)
    NAMESPACE       reduce using rule 6 (secaoUsing -> USING ID PONTO_VIRGULA secaoUsing .)


state 20

    (8) defClasse -> PUBLIC CLASS ID CHAVE_L . CHAVE_R
    (10) defClasse -> PUBLIC CLASS ID CHAVE_L . corpoClasse CHAVE_R
    (12) defClasse -> PUBLIC CLASS ID CHAVE_L . CHAVE_R defClasse
    (15) defClasse -> PUBLIC CLASS ID CHAVE_L . corpoClasse CHAVE_R defClasse
    (16) corpoClasse -> . atributo
    (17) corpoClasse -> . atributo corpoClasse
    (18) corpoClasse -> . assinatura
    (19) corpoClasse -> . assinatura corpoClasse
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (26) assinatura -> . PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco
    (27) assinatura -> . tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    CHAVE_R         shift and go to state 32
    PUBLIC          shift and go to state 26
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    corpoClasse                    shift and go to state 33
    atributo                       shift and go to state 24
    assinatura                     shift and go to state 25
    tipo                           shift and go to state 27

state 21

    (34) tipo -> ID .

    ID              reduce using rule 34 (tipo -> ID .)


state 22

    (9) defClasse -> CLASS ID CHAVE_L CHAVE_R .
    (13) defClasse -> CLASS ID CHAVE_L CHAVE_R . defClasse
    (8) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R
    (9) defClasse -> . CLASS ID CHAVE_L CHAVE_R
    (10) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R
    (11) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R
    (12) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R defClasse
    (13) defClasse -> . CLASS ID CHAVE_L CHAVE_R defClasse
    (14) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse
    (15) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse

    $end            reduce using rule 9 (defClasse -> CLASS ID CHAVE_L CHAVE_R .)
    CHAVE_R         reduce using rule 9 (defClasse -> CLASS ID CHAVE_L CHAVE_R .)
    PUBLIC          shift and go to state 6
    CLASS           shift and go to state 7

    defClasse                      shift and go to state 34

state 23

    (11) defClasse -> CLASS ID CHAVE_L corpoClasse . CHAVE_R
    (14) defClasse -> CLASS ID CHAVE_L corpoClasse . CHAVE_R defClasse

    CHAVE_R         shift and go to state 35


state 24

    (16) corpoClasse -> atributo .
    (17) corpoClasse -> atributo . corpoClasse
    (16) corpoClasse -> . atributo
    (17) corpoClasse -> . atributo corpoClasse
    (18) corpoClasse -> . assinatura
    (19) corpoClasse -> . assinatura corpoClasse
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (26) assinatura -> . PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco
    (27) assinatura -> . tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    CHAVE_R         reduce using rule 16 (corpoClasse -> atributo .)
    PUBLIC          shift and go to state 26
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    atributo                       shift and go to state 24
    corpoClasse                    shift and go to state 36
    assinatura                     shift and go to state 25
    tipo                           shift and go to state 27

state 25

    (18) corpoClasse -> assinatura .
    (19) corpoClasse -> assinatura . corpoClasse
    (16) corpoClasse -> . atributo
    (17) corpoClasse -> . atributo corpoClasse
    (18) corpoClasse -> . assinatura
    (19) corpoClasse -> . assinatura corpoClasse
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (26) assinatura -> . PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco
    (27) assinatura -> . tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    CHAVE_R         reduce using rule 18 (corpoClasse -> assinatura .)
    PUBLIC          shift and go to state 26
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    assinatura                     shift and go to state 25
    corpoClasse                    shift and go to state 37
    atributo                       shift and go to state 24
    tipo                           shift and go to state 27

state 26

    (20) atributo -> PUBLIC . tipo atribuicao PONTO_VIRGULA
    (26) assinatura -> PUBLIC . tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    tipo                           shift and go to state 38

state 27

    (21) atributo -> tipo . atribuicao PONTO_VIRGULA
    (27) assinatura -> tipo . ID PARENTESE_L parametrosFormais PARENTESE_R bloco
    (22) atribuicao -> . ID ATRIBUICAO ID
    (23) atribuicao -> . ID ATRIBUICAO INT
    (24) atribuicao -> . ID
    (25) atribuicao -> . ID ATRIBUICAO chamadaMetodo

    ID              shift and go to state 40

    atribuicao                     shift and go to state 39

state 28

    (32) tipo -> INT .

    ID              reduce using rule 32 (tipo -> INT .)


state 29

    (33) tipo -> STRING .

    ID              reduce using rule 33 (tipo -> STRING .)


state 30

    (35) tipo -> BOOL .

    ID              reduce using rule 35 (tipo -> BOOL .)


state 31

    (7) secaoNamespace -> NAMESPACE ID CHAVE_L defClasse . CHAVE_R

    CHAVE_R         shift and go to state 41


state 32

    (8) defClasse -> PUBLIC CLASS ID CHAVE_L CHAVE_R .
    (12) defClasse -> PUBLIC CLASS ID CHAVE_L CHAVE_R . defClasse
    (8) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R
    (9) defClasse -> . CLASS ID CHAVE_L CHAVE_R
    (10) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R
    (11) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R
    (12) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R defClasse
    (13) defClasse -> . CLASS ID CHAVE_L CHAVE_R defClasse
    (14) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse
    (15) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse

    $end            reduce using rule 8 (defClasse -> PUBLIC CLASS ID CHAVE_L CHAVE_R .)
    CHAVE_R         reduce using rule 8 (defClasse -> PUBLIC CLASS ID CHAVE_L CHAVE_R .)
    PUBLIC          shift and go to state 6
    CLASS           shift and go to state 7

    defClasse                      shift and go to state 42

state 33

    (10) defClasse -> PUBLIC CLASS ID CHAVE_L corpoClasse . CHAVE_R
    (15) defClasse -> PUBLIC CLASS ID CHAVE_L corpoClasse . CHAVE_R defClasse

    CHAVE_R         shift and go to state 43


state 34

    (13) defClasse -> CLASS ID CHAVE_L CHAVE_R defClasse .

    $end            reduce using rule 13 (defClasse -> CLASS ID CHAVE_L CHAVE_R defClasse .)
    CHAVE_R         reduce using rule 13 (defClasse -> CLASS ID CHAVE_L CHAVE_R defClasse .)


state 35

    (11) defClasse -> CLASS ID CHAVE_L corpoClasse CHAVE_R .
    (14) defClasse -> CLASS ID CHAVE_L corpoClasse CHAVE_R . defClasse
    (8) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R
    (9) defClasse -> . CLASS ID CHAVE_L CHAVE_R
    (10) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R
    (11) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R
    (12) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R defClasse
    (13) defClasse -> . CLASS ID CHAVE_L CHAVE_R defClasse
    (14) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse
    (15) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse

    $end            reduce using rule 11 (defClasse -> CLASS ID CHAVE_L corpoClasse CHAVE_R .)
    CHAVE_R         reduce using rule 11 (defClasse -> CLASS ID CHAVE_L corpoClasse CHAVE_R .)
    PUBLIC          shift and go to state 6
    CLASS           shift and go to state 7

    defClasse                      shift and go to state 44

state 36

    (17) corpoClasse -> atributo corpoClasse .

    CHAVE_R         reduce using rule 17 (corpoClasse -> atributo corpoClasse .)


state 37

    (19) corpoClasse -> assinatura corpoClasse .

    CHAVE_R         reduce using rule 19 (corpoClasse -> assinatura corpoClasse .)


state 38

    (20) atributo -> PUBLIC tipo . atribuicao PONTO_VIRGULA
    (26) assinatura -> PUBLIC tipo . ID PARENTESE_L parametrosFormais PARENTESE_R bloco
    (22) atribuicao -> . ID ATRIBUICAO ID
    (23) atribuicao -> . ID ATRIBUICAO INT
    (24) atribuicao -> . ID
    (25) atribuicao -> . ID ATRIBUICAO chamadaMetodo

    ID              shift and go to state 46

    atribuicao                     shift and go to state 45

state 39

    (21) atributo -> tipo atribuicao . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 47


state 40

    (27) assinatura -> tipo ID . PARENTESE_L parametrosFormais PARENTESE_R bloco
    (22) atribuicao -> ID . ATRIBUICAO ID
    (23) atribuicao -> ID . ATRIBUICAO INT
    (24) atribuicao -> ID .
    (25) atribuicao -> ID . ATRIBUICAO chamadaMetodo

    PARENTESE_L     shift and go to state 48
    ATRIBUICAO      shift and go to state 49
    PONTO_VIRGULA   reduce using rule 24 (atribuicao -> ID .)


state 41

    (7) secaoNamespace -> NAMESPACE ID CHAVE_L defClasse CHAVE_R .

    $end            reduce using rule 7 (secaoNamespace -> NAMESPACE ID CHAVE_L defClasse CHAVE_R .)


state 42

    (12) defClasse -> PUBLIC CLASS ID CHAVE_L CHAVE_R defClasse .

    $end            reduce using rule 12 (defClasse -> PUBLIC CLASS ID CHAVE_L CHAVE_R defClasse .)
    CHAVE_R         reduce using rule 12 (defClasse -> PUBLIC CLASS ID CHAVE_L CHAVE_R defClasse .)


state 43

    (10) defClasse -> PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R .
    (15) defClasse -> PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R . defClasse
    (8) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R
    (9) defClasse -> . CLASS ID CHAVE_L CHAVE_R
    (10) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R
    (11) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R
    (12) defClasse -> . PUBLIC CLASS ID CHAVE_L CHAVE_R defClasse
    (13) defClasse -> . CLASS ID CHAVE_L CHAVE_R defClasse
    (14) defClasse -> . CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse
    (15) defClasse -> . PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse

    $end            reduce using rule 10 (defClasse -> PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R .)
    CHAVE_R         reduce using rule 10 (defClasse -> PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R .)
    PUBLIC          shift and go to state 6
    CLASS           shift and go to state 7

    defClasse                      shift and go to state 50

state 44

    (14) defClasse -> CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse .

    $end            reduce using rule 14 (defClasse -> CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse .)
    CHAVE_R         reduce using rule 14 (defClasse -> CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse .)


state 45

    (20) atributo -> PUBLIC tipo atribuicao . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 51


state 46

    (26) assinatura -> PUBLIC tipo ID . PARENTESE_L parametrosFormais PARENTESE_R bloco
    (22) atribuicao -> ID . ATRIBUICAO ID
    (23) atribuicao -> ID . ATRIBUICAO INT
    (24) atribuicao -> ID .
    (25) atribuicao -> ID . ATRIBUICAO chamadaMetodo

    PARENTESE_L     shift and go to state 52
    ATRIBUICAO      shift and go to state 49
    PONTO_VIRGULA   reduce using rule 24 (atribuicao -> ID .)


state 47

    (21) atributo -> tipo atribuicao PONTO_VIRGULA .

    PUBLIC          reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)
    INT             reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)
    STRING          reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)
    ID              reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)
    BOOL            reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)
    CHAVE_R         reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)
    IF              reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)
    FOR             reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)
    FOREACH         reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)
    WHILE           reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)
    RETURN          reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)
    ELSE            reduce using rule 21 (atributo -> tipo atribuicao PONTO_VIRGULA .)


state 48

    (27) assinatura -> tipo ID PARENTESE_L . parametrosFormais PARENTESE_R bloco
    (28) parametrosFormais -> . tipo ID
    (29) parametrosFormais -> . tipo ID VIRGULA parametrosFormais
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    tipo                           shift and go to state 53
    parametrosFormais              shift and go to state 54

state 49

    (22) atribuicao -> ID ATRIBUICAO . ID
    (23) atribuicao -> ID ATRIBUICAO . INT
    (25) atribuicao -> ID ATRIBUICAO . chamadaMetodo
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    ID              shift and go to state 55
    INT             shift and go to state 56

    chamadaMetodo                  shift and go to state 57

state 50

    (15) defClasse -> PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse .

    $end            reduce using rule 15 (defClasse -> PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse .)
    CHAVE_R         reduce using rule 15 (defClasse -> PUBLIC CLASS ID CHAVE_L corpoClasse CHAVE_R defClasse .)


state 51

    (20) atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .

    PUBLIC          reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)
    INT             reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)
    STRING          reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)
    ID              reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)
    BOOL            reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)
    CHAVE_R         reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)
    IF              reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)
    FOR             reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)
    FOREACH         reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)
    WHILE           reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)
    RETURN          reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)
    ELSE            reduce using rule 20 (atributo -> PUBLIC tipo atribuicao PONTO_VIRGULA .)


state 52

    (26) assinatura -> PUBLIC tipo ID PARENTESE_L . parametrosFormais PARENTESE_R bloco
    (28) parametrosFormais -> . tipo ID
    (29) parametrosFormais -> . tipo ID VIRGULA parametrosFormais
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    tipo                           shift and go to state 53
    parametrosFormais              shift and go to state 58

state 53

    (28) parametrosFormais -> tipo . ID
    (29) parametrosFormais -> tipo . ID VIRGULA parametrosFormais

    ID              shift and go to state 59


state 54

    (27) assinatura -> tipo ID PARENTESE_L parametrosFormais . PARENTESE_R bloco

    PARENTESE_R     shift and go to state 60


state 55

    (22) atribuicao -> ID ATRIBUICAO ID .
    (36) chamadaMetodo -> ID . PARENTESE_L parametrosReais PARENTESE_R

    PONTO_VIRGULA   reduce using rule 22 (atribuicao -> ID ATRIBUICAO ID .)
    PARENTESE_L     shift and go to state 61


state 56

    (23) atribuicao -> ID ATRIBUICAO INT .

    PONTO_VIRGULA   reduce using rule 23 (atribuicao -> ID ATRIBUICAO INT .)


state 57

    (25) atribuicao -> ID ATRIBUICAO chamadaMetodo .

    PONTO_VIRGULA   reduce using rule 25 (atribuicao -> ID ATRIBUICAO chamadaMetodo .)


state 58

    (26) assinatura -> PUBLIC tipo ID PARENTESE_L parametrosFormais . PARENTESE_R bloco

    PARENTESE_R     shift and go to state 62


state 59

    (28) parametrosFormais -> tipo ID .
    (29) parametrosFormais -> tipo ID . VIRGULA parametrosFormais

    PARENTESE_R     reduce using rule 28 (parametrosFormais -> tipo ID .)
    VIRGULA         shift and go to state 63


state 60

    (27) assinatura -> tipo ID PARENTESE_L parametrosFormais PARENTESE_R . bloco
    (52) bloco -> . CHAVE_L corpoComando CHAVE_R
    (53) bloco -> . CHAVE_L CHAVE_R

    CHAVE_L         shift and go to state 65

    bloco                          shift and go to state 64

state 61

    (36) chamadaMetodo -> ID PARENTESE_L . parametrosReais PARENTESE_R
    (37) parametrosReais -> . ID
    (38) parametrosReais -> . ID VIRGULA parametrosReais
    (39) parametrosReais -> . INT
    (40) parametrosReais -> . INT VIRGULA parametrosReais

    ID              shift and go to state 66
    INT             shift and go to state 68

    parametrosReais                shift and go to state 67

state 62

    (26) assinatura -> PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R . bloco
    (52) bloco -> . CHAVE_L corpoComando CHAVE_R
    (53) bloco -> . CHAVE_L CHAVE_R

    CHAVE_L         shift and go to state 65

    bloco                          shift and go to state 69

state 63

    (29) parametrosFormais -> tipo ID VIRGULA . parametrosFormais
    (28) parametrosFormais -> . tipo ID
    (29) parametrosFormais -> . tipo ID VIRGULA parametrosFormais
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    tipo                           shift and go to state 53
    parametrosFormais              shift and go to state 70

state 64

    (27) assinatura -> tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .

    PUBLIC          reduce using rule 27 (assinatura -> tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)
    INT             reduce using rule 27 (assinatura -> tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)
    STRING          reduce using rule 27 (assinatura -> tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)
    ID              reduce using rule 27 (assinatura -> tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)
    BOOL            reduce using rule 27 (assinatura -> tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)
    CHAVE_R         reduce using rule 27 (assinatura -> tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)


state 65

    (52) bloco -> CHAVE_L . corpoComando CHAVE_R
    (53) bloco -> CHAVE_L . CHAVE_R
    (61) corpoComando -> . comandos
    (62) corpoComando -> . corpoComando comandos
    (41) comandos -> . comandos1
    (42) comandos -> . comandos2
    (43) comandos1 -> . for1
    (44) comandos1 -> . foreach1
    (45) comandos1 -> . while1
    (46) comandos1 -> . return
    (47) comandos1 -> . atributo
    (48) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
    (54) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos
    (55) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco
    (57) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2
    (58) comandos2 -> . for2
    (59) comandos2 -> . while2
    (60) comandos2 -> . foreach2
    (63) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (72) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco
    (74) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1
    (69) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R bloco
    (70) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos1
    (78) return -> . RETURN ID PONTO_VIRGULA
    (79) return -> . RETURN INT PONTO_VIRGULA
    (80) return -> . RETURN PONTO_VIRGULA
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (67) for2 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (71) while2 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos2
    (76) foreach2 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    CHAVE_R         shift and go to state 72
    IF              shift and go to state 81
    FOR             shift and go to state 85
    FOREACH         shift and go to state 87
    WHILE           shift and go to state 88
    RETURN          shift and go to state 89
    PUBLIC          shift and go to state 90
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    corpoComando                   shift and go to state 71
    comandos                       shift and go to state 73
    comandos1                      shift and go to state 74
    comandos2                      shift and go to state 75
    for1                           shift and go to state 76
    foreach1                       shift and go to state 77
    while1                         shift and go to state 78
    return                         shift and go to state 79
    atributo                       shift and go to state 80
    for2                           shift and go to state 82
    while2                         shift and go to state 83
    foreach2                       shift and go to state 84
    tipo                           shift and go to state 86

state 66

    (37) parametrosReais -> ID .
    (38) parametrosReais -> ID . VIRGULA parametrosReais

    PARENTESE_R     reduce using rule 37 (parametrosReais -> ID .)
    VIRGULA         shift and go to state 91


state 67

    (36) chamadaMetodo -> ID PARENTESE_L parametrosReais . PARENTESE_R

    PARENTESE_R     shift and go to state 92


state 68

    (39) parametrosReais -> INT .
    (40) parametrosReais -> INT . VIRGULA parametrosReais

    PARENTESE_R     reduce using rule 39 (parametrosReais -> INT .)
    VIRGULA         shift and go to state 93


state 69

    (26) assinatura -> PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .

    PUBLIC          reduce using rule 26 (assinatura -> PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)
    INT             reduce using rule 26 (assinatura -> PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)
    STRING          reduce using rule 26 (assinatura -> PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)
    ID              reduce using rule 26 (assinatura -> PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)
    BOOL            reduce using rule 26 (assinatura -> PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)
    CHAVE_R         reduce using rule 26 (assinatura -> PUBLIC tipo ID PARENTESE_L parametrosFormais PARENTESE_R bloco .)


state 70

    (29) parametrosFormais -> tipo ID VIRGULA parametrosFormais .

    PARENTESE_R     reduce using rule 29 (parametrosFormais -> tipo ID VIRGULA parametrosFormais .)


state 71

    (52) bloco -> CHAVE_L corpoComando . CHAVE_R
    (62) corpoComando -> corpoComando . comandos
    (41) comandos -> . comandos1
    (42) comandos -> . comandos2
    (43) comandos1 -> . for1
    (44) comandos1 -> . foreach1
    (45) comandos1 -> . while1
    (46) comandos1 -> . return
    (47) comandos1 -> . atributo
    (48) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
    (54) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos
    (55) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco
    (57) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2
    (58) comandos2 -> . for2
    (59) comandos2 -> . while2
    (60) comandos2 -> . foreach2
    (63) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (72) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco
    (74) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1
    (69) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R bloco
    (70) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos1
    (78) return -> . RETURN ID PONTO_VIRGULA
    (79) return -> . RETURN INT PONTO_VIRGULA
    (80) return -> . RETURN PONTO_VIRGULA
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (67) for2 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (71) while2 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos2
    (76) foreach2 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    CHAVE_R         shift and go to state 94
    IF              shift and go to state 81
    FOR             shift and go to state 85
    FOREACH         shift and go to state 87
    WHILE           shift and go to state 88
    RETURN          shift and go to state 89
    PUBLIC          shift and go to state 90
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    comandos                       shift and go to state 95
    comandos1                      shift and go to state 74
    comandos2                      shift and go to state 75
    for1                           shift and go to state 76
    foreach1                       shift and go to state 77
    while1                         shift and go to state 78
    return                         shift and go to state 79
    atributo                       shift and go to state 80
    for2                           shift and go to state 82
    while2                         shift and go to state 83
    foreach2                       shift and go to state 84
    tipo                           shift and go to state 86

state 72

    (53) bloco -> CHAVE_L CHAVE_R .

    PUBLIC          reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)
    INT             reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)
    STRING          reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)
    ID              reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)
    BOOL            reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)
    CHAVE_R         reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)
    ELSE            reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)
    IF              reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)
    FOR             reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)
    FOREACH         reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)
    WHILE           reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)
    RETURN          reduce using rule 53 (bloco -> CHAVE_L CHAVE_R .)


state 73

    (61) corpoComando -> comandos .

    CHAVE_R         reduce using rule 61 (corpoComando -> comandos .)
    IF              reduce using rule 61 (corpoComando -> comandos .)
    FOR             reduce using rule 61 (corpoComando -> comandos .)
    FOREACH         reduce using rule 61 (corpoComando -> comandos .)
    WHILE           reduce using rule 61 (corpoComando -> comandos .)
    RETURN          reduce using rule 61 (corpoComando -> comandos .)
    PUBLIC          reduce using rule 61 (corpoComando -> comandos .)
    INT             reduce using rule 61 (corpoComando -> comandos .)
    STRING          reduce using rule 61 (corpoComando -> comandos .)
    ID              reduce using rule 61 (corpoComando -> comandos .)
    BOOL            reduce using rule 61 (corpoComando -> comandos .)


state 74

    (41) comandos -> comandos1 .

    CHAVE_R         reduce using rule 41 (comandos -> comandos1 .)
    IF              reduce using rule 41 (comandos -> comandos1 .)
    FOR             reduce using rule 41 (comandos -> comandos1 .)
    FOREACH         reduce using rule 41 (comandos -> comandos1 .)
    WHILE           reduce using rule 41 (comandos -> comandos1 .)
    RETURN          reduce using rule 41 (comandos -> comandos1 .)
    PUBLIC          reduce using rule 41 (comandos -> comandos1 .)
    INT             reduce using rule 41 (comandos -> comandos1 .)
    STRING          reduce using rule 41 (comandos -> comandos1 .)
    ID              reduce using rule 41 (comandos -> comandos1 .)
    BOOL            reduce using rule 41 (comandos -> comandos1 .)


state 75

    (42) comandos -> comandos2 .

    CHAVE_R         reduce using rule 42 (comandos -> comandos2 .)
    IF              reduce using rule 42 (comandos -> comandos2 .)
    FOR             reduce using rule 42 (comandos -> comandos2 .)
    FOREACH         reduce using rule 42 (comandos -> comandos2 .)
    WHILE           reduce using rule 42 (comandos -> comandos2 .)
    RETURN          reduce using rule 42 (comandos -> comandos2 .)
    PUBLIC          reduce using rule 42 (comandos -> comandos2 .)
    INT             reduce using rule 42 (comandos -> comandos2 .)
    STRING          reduce using rule 42 (comandos -> comandos2 .)
    ID              reduce using rule 42 (comandos -> comandos2 .)
    BOOL            reduce using rule 42 (comandos -> comandos2 .)


state 76

    (43) comandos1 -> for1 .

    CHAVE_R         reduce using rule 43 (comandos1 -> for1 .)
    IF              reduce using rule 43 (comandos1 -> for1 .)
    FOR             reduce using rule 43 (comandos1 -> for1 .)
    FOREACH         reduce using rule 43 (comandos1 -> for1 .)
    WHILE           reduce using rule 43 (comandos1 -> for1 .)
    RETURN          reduce using rule 43 (comandos1 -> for1 .)
    PUBLIC          reduce using rule 43 (comandos1 -> for1 .)
    INT             reduce using rule 43 (comandos1 -> for1 .)
    STRING          reduce using rule 43 (comandos1 -> for1 .)
    ID              reduce using rule 43 (comandos1 -> for1 .)
    BOOL            reduce using rule 43 (comandos1 -> for1 .)
    ELSE            reduce using rule 43 (comandos1 -> for1 .)


state 77

    (44) comandos1 -> foreach1 .

    CHAVE_R         reduce using rule 44 (comandos1 -> foreach1 .)
    IF              reduce using rule 44 (comandos1 -> foreach1 .)
    FOR             reduce using rule 44 (comandos1 -> foreach1 .)
    FOREACH         reduce using rule 44 (comandos1 -> foreach1 .)
    WHILE           reduce using rule 44 (comandos1 -> foreach1 .)
    RETURN          reduce using rule 44 (comandos1 -> foreach1 .)
    PUBLIC          reduce using rule 44 (comandos1 -> foreach1 .)
    INT             reduce using rule 44 (comandos1 -> foreach1 .)
    STRING          reduce using rule 44 (comandos1 -> foreach1 .)
    ID              reduce using rule 44 (comandos1 -> foreach1 .)
    BOOL            reduce using rule 44 (comandos1 -> foreach1 .)
    ELSE            reduce using rule 44 (comandos1 -> foreach1 .)


state 78

    (45) comandos1 -> while1 .

    CHAVE_R         reduce using rule 45 (comandos1 -> while1 .)
    IF              reduce using rule 45 (comandos1 -> while1 .)
    FOR             reduce using rule 45 (comandos1 -> while1 .)
    FOREACH         reduce using rule 45 (comandos1 -> while1 .)
    WHILE           reduce using rule 45 (comandos1 -> while1 .)
    RETURN          reduce using rule 45 (comandos1 -> while1 .)
    PUBLIC          reduce using rule 45 (comandos1 -> while1 .)
    INT             reduce using rule 45 (comandos1 -> while1 .)
    STRING          reduce using rule 45 (comandos1 -> while1 .)
    ID              reduce using rule 45 (comandos1 -> while1 .)
    BOOL            reduce using rule 45 (comandos1 -> while1 .)
    ELSE            reduce using rule 45 (comandos1 -> while1 .)


state 79

    (46) comandos1 -> return .

    CHAVE_R         reduce using rule 46 (comandos1 -> return .)
    IF              reduce using rule 46 (comandos1 -> return .)
    FOR             reduce using rule 46 (comandos1 -> return .)
    FOREACH         reduce using rule 46 (comandos1 -> return .)
    WHILE           reduce using rule 46 (comandos1 -> return .)
    RETURN          reduce using rule 46 (comandos1 -> return .)
    PUBLIC          reduce using rule 46 (comandos1 -> return .)
    INT             reduce using rule 46 (comandos1 -> return .)
    STRING          reduce using rule 46 (comandos1 -> return .)
    ID              reduce using rule 46 (comandos1 -> return .)
    BOOL            reduce using rule 46 (comandos1 -> return .)
    ELSE            reduce using rule 46 (comandos1 -> return .)


state 80

    (47) comandos1 -> atributo .

    CHAVE_R         reduce using rule 47 (comandos1 -> atributo .)
    IF              reduce using rule 47 (comandos1 -> atributo .)
    FOR             reduce using rule 47 (comandos1 -> atributo .)
    FOREACH         reduce using rule 47 (comandos1 -> atributo .)
    WHILE           reduce using rule 47 (comandos1 -> atributo .)
    RETURN          reduce using rule 47 (comandos1 -> atributo .)
    PUBLIC          reduce using rule 47 (comandos1 -> atributo .)
    INT             reduce using rule 47 (comandos1 -> atributo .)
    STRING          reduce using rule 47 (comandos1 -> atributo .)
    ID              reduce using rule 47 (comandos1 -> atributo .)
    BOOL            reduce using rule 47 (comandos1 -> atributo .)
    ELSE            reduce using rule 47 (comandos1 -> atributo .)


state 81

    (48) comandos1 -> IF . PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> IF . PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> IF . PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> IF . PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
    (54) comandos2 -> IF . PARENTESE_L exp1 PARENTESE_R comandos
    (55) comandos2 -> IF . PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> IF . PARENTESE_L exp1 PARENTESE_R bloco
    (57) comandos2 -> IF . PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2

    PARENTESE_L     shift and go to state 96


state 82

    (58) comandos2 -> for2 .

    CHAVE_R         reduce using rule 58 (comandos2 -> for2 .)
    IF              reduce using rule 58 (comandos2 -> for2 .)
    FOR             reduce using rule 58 (comandos2 -> for2 .)
    FOREACH         reduce using rule 58 (comandos2 -> for2 .)
    WHILE           reduce using rule 58 (comandos2 -> for2 .)
    RETURN          reduce using rule 58 (comandos2 -> for2 .)
    PUBLIC          reduce using rule 58 (comandos2 -> for2 .)
    INT             reduce using rule 58 (comandos2 -> for2 .)
    STRING          reduce using rule 58 (comandos2 -> for2 .)
    ID              reduce using rule 58 (comandos2 -> for2 .)
    BOOL            reduce using rule 58 (comandos2 -> for2 .)


state 83

    (59) comandos2 -> while2 .

    CHAVE_R         reduce using rule 59 (comandos2 -> while2 .)
    IF              reduce using rule 59 (comandos2 -> while2 .)
    FOR             reduce using rule 59 (comandos2 -> while2 .)
    FOREACH         reduce using rule 59 (comandos2 -> while2 .)
    WHILE           reduce using rule 59 (comandos2 -> while2 .)
    RETURN          reduce using rule 59 (comandos2 -> while2 .)
    PUBLIC          reduce using rule 59 (comandos2 -> while2 .)
    INT             reduce using rule 59 (comandos2 -> while2 .)
    STRING          reduce using rule 59 (comandos2 -> while2 .)
    ID              reduce using rule 59 (comandos2 -> while2 .)
    BOOL            reduce using rule 59 (comandos2 -> while2 .)


state 84

    (60) comandos2 -> foreach2 .

    CHAVE_R         reduce using rule 60 (comandos2 -> foreach2 .)
    IF              reduce using rule 60 (comandos2 -> foreach2 .)
    FOR             reduce using rule 60 (comandos2 -> foreach2 .)
    FOREACH         reduce using rule 60 (comandos2 -> foreach2 .)
    WHILE           reduce using rule 60 (comandos2 -> foreach2 .)
    RETURN          reduce using rule 60 (comandos2 -> foreach2 .)
    PUBLIC          reduce using rule 60 (comandos2 -> foreach2 .)
    INT             reduce using rule 60 (comandos2 -> foreach2 .)
    STRING          reduce using rule 60 (comandos2 -> foreach2 .)
    ID              reduce using rule 60 (comandos2 -> foreach2 .)
    BOOL            reduce using rule 60 (comandos2 -> foreach2 .)


state 85

    (63) for1 -> FOR . PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> FOR . PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> FOR . PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> FOR . PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (67) for2 -> FOR . PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> FOR . PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2

    PARENTESE_L     shift and go to state 97


state 86

    (21) atributo -> tipo . atribuicao PONTO_VIRGULA
    (22) atribuicao -> . ID ATRIBUICAO ID
    (23) atribuicao -> . ID ATRIBUICAO INT
    (24) atribuicao -> . ID
    (25) atribuicao -> . ID ATRIBUICAO chamadaMetodo

    ID              shift and go to state 98

    atribuicao                     shift and go to state 39

state 87

    (72) foreach1 -> FOREACH . PARENTESE_L tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> FOREACH . PARENTESE_L ID IN ID PARENTESE_R bloco
    (74) foreach1 -> FOREACH . PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> FOREACH . PARENTESE_L ID IN ID PARENTESE_R comandos1
    (76) foreach2 -> FOREACH . PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> FOREACH . PARENTESE_L ID IN ID PARENTESE_R comandos2

    PARENTESE_L     shift and go to state 99


state 88

    (69) while1 -> WHILE . PARENTESE_L exp1 PARENTESE_R bloco
    (70) while1 -> WHILE . PARENTESE_L exp1 PARENTESE_R comandos1
    (71) while2 -> WHILE . PARENTESE_L exp1 PARENTESE_R comandos2

    PARENTESE_L     shift and go to state 100


state 89

    (78) return -> RETURN . ID PONTO_VIRGULA
    (79) return -> RETURN . INT PONTO_VIRGULA
    (80) return -> RETURN . PONTO_VIRGULA

    ID              shift and go to state 101
    INT             shift and go to state 103
    PONTO_VIRGULA   shift and go to state 102


state 90

    (20) atributo -> PUBLIC . tipo atribuicao PONTO_VIRGULA
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    tipo                           shift and go to state 104

state 91

    (38) parametrosReais -> ID VIRGULA . parametrosReais
    (37) parametrosReais -> . ID
    (38) parametrosReais -> . ID VIRGULA parametrosReais
    (39) parametrosReais -> . INT
    (40) parametrosReais -> . INT VIRGULA parametrosReais

    ID              shift and go to state 66
    INT             shift and go to state 68

    parametrosReais                shift and go to state 105

state 92

    (36) chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .

    PONTO_VIRGULA   reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    INCREMENTO      reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    DECREMENTO      reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    MUL             reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    DIV             reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    SOMA            reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    SUB             reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    MENOR           reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    MENOR_IGUAL     reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    MAIOR           reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    MAIOR_IGUAL     reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    IGUAL           reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    DIFERENTE       reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    BIT_AND         reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    XOR             reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    BIT_OR          reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    AND             reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    OR              reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    PARENTESE_R     reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)
    ATRIBUICAO      reduce using rule 36 (chamadaMetodo -> ID PARENTESE_L parametrosReais PARENTESE_R .)


state 93

    (40) parametrosReais -> INT VIRGULA . parametrosReais
    (37) parametrosReais -> . ID
    (38) parametrosReais -> . ID VIRGULA parametrosReais
    (39) parametrosReais -> . INT
    (40) parametrosReais -> . INT VIRGULA parametrosReais

    ID              shift and go to state 66
    INT             shift and go to state 68

    parametrosReais                shift and go to state 106

state 94

    (52) bloco -> CHAVE_L corpoComando CHAVE_R .

    PUBLIC          reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)
    INT             reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)
    STRING          reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)
    ID              reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)
    BOOL            reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)
    CHAVE_R         reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)
    ELSE            reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)
    IF              reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)
    FOR             reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)
    FOREACH         reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)
    WHILE           reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)
    RETURN          reduce using rule 52 (bloco -> CHAVE_L corpoComando CHAVE_R .)


state 95

    (62) corpoComando -> corpoComando comandos .

    CHAVE_R         reduce using rule 62 (corpoComando -> corpoComando comandos .)
    IF              reduce using rule 62 (corpoComando -> corpoComando comandos .)
    FOR             reduce using rule 62 (corpoComando -> corpoComando comandos .)
    FOREACH         reduce using rule 62 (corpoComando -> corpoComando comandos .)
    WHILE           reduce using rule 62 (corpoComando -> corpoComando comandos .)
    RETURN          reduce using rule 62 (corpoComando -> corpoComando comandos .)
    PUBLIC          reduce using rule 62 (corpoComando -> corpoComando comandos .)
    INT             reduce using rule 62 (corpoComando -> corpoComando comandos .)
    STRING          reduce using rule 62 (corpoComando -> corpoComando comandos .)
    ID              reduce using rule 62 (corpoComando -> corpoComando comandos .)
    BOOL            reduce using rule 62 (corpoComando -> corpoComando comandos .)


state 96

    (48) comandos1 -> IF PARENTESE_L . exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> IF PARENTESE_L . exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> IF PARENTESE_L . exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> IF PARENTESE_L . exp1 PARENTESE_R bloco ELSE bloco
    (54) comandos2 -> IF PARENTESE_L . exp1 PARENTESE_R comandos
    (55) comandos2 -> IF PARENTESE_L . exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> IF PARENTESE_L . exp1 PARENTESE_R bloco
    (57) comandos2 -> IF PARENTESE_L . exp1 PARENTESE_R bloco ELSE comandos2
    (81) exp1 -> . exp1 ATRIBUICAO exp2
    (82) exp1 -> . exp2
    (83) exp2 -> . exp2 OR exp3
    (84) exp2 -> . exp3
    (85) exp3 -> . exp3 AND exp4
    (86) exp3 -> . exp4
    (87) exp4 -> . exp4 BIT_OR exp5
    (88) exp4 -> . exp5
    (89) exp5 -> . exp5 XOR exp6
    (90) exp5 -> . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp1                           shift and go to state 108
    exp2                           shift and go to state 109
    exp3                           shift and go to state 110
    exp4                           shift and go to state 111
    exp5                           shift and go to state 112
    exp6                           shift and go to state 113
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 97

    (63) for1 -> FOR PARENTESE_L . tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> FOR PARENTESE_L . atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> FOR PARENTESE_L . tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> FOR PARENTESE_L . atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (67) for2 -> FOR PARENTESE_L . tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> FOR PARENTESE_L . atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL
    (22) atribuicao -> . ID ATRIBUICAO ID
    (23) atribuicao -> . ID ATRIBUICAO INT
    (24) atribuicao -> . ID
    (25) atribuicao -> . ID ATRIBUICAO chamadaMetodo

    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 131
    BOOL            shift and go to state 30

    tipo                           shift and go to state 129
    atribuicao                     shift and go to state 130

state 98

    (22) atribuicao -> ID . ATRIBUICAO ID
    (23) atribuicao -> ID . ATRIBUICAO INT
    (24) atribuicao -> ID .
    (25) atribuicao -> ID . ATRIBUICAO chamadaMetodo

    ATRIBUICAO      shift and go to state 49
    PONTO_VIRGULA   reduce using rule 24 (atribuicao -> ID .)


state 99

    (72) foreach1 -> FOREACH PARENTESE_L . tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> FOREACH PARENTESE_L . ID IN ID PARENTESE_R bloco
    (74) foreach1 -> FOREACH PARENTESE_L . tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> FOREACH PARENTESE_L . ID IN ID PARENTESE_R comandos1
    (76) foreach2 -> FOREACH PARENTESE_L . tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> FOREACH PARENTESE_L . ID IN ID PARENTESE_R comandos2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    ID              shift and go to state 133
    INT             shift and go to state 28
    STRING          shift and go to state 29
    BOOL            shift and go to state 30

    tipo                           shift and go to state 132

state 100

    (69) while1 -> WHILE PARENTESE_L . exp1 PARENTESE_R bloco
    (70) while1 -> WHILE PARENTESE_L . exp1 PARENTESE_R comandos1
    (71) while2 -> WHILE PARENTESE_L . exp1 PARENTESE_R comandos2
    (81) exp1 -> . exp1 ATRIBUICAO exp2
    (82) exp1 -> . exp2
    (83) exp2 -> . exp2 OR exp3
    (84) exp2 -> . exp3
    (85) exp3 -> . exp3 AND exp4
    (86) exp3 -> . exp4
    (87) exp4 -> . exp4 BIT_OR exp5
    (88) exp4 -> . exp5
    (89) exp5 -> . exp5 XOR exp6
    (90) exp5 -> . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp1                           shift and go to state 134
    exp2                           shift and go to state 109
    exp3                           shift and go to state 110
    exp4                           shift and go to state 111
    exp5                           shift and go to state 112
    exp6                           shift and go to state 113
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 101

    (78) return -> RETURN ID . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 135


state 102

    (80) return -> RETURN PONTO_VIRGULA .

    CHAVE_R         reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)
    IF              reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)
    FOR             reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)
    FOREACH         reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)
    WHILE           reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)
    RETURN          reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)
    PUBLIC          reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)
    INT             reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)
    STRING          reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)
    ID              reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)
    BOOL            reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)
    ELSE            reduce using rule 80 (return -> RETURN PONTO_VIRGULA .)


state 103

    (79) return -> RETURN INT . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 136


state 104

    (20) atributo -> PUBLIC tipo . atribuicao PONTO_VIRGULA
    (22) atribuicao -> . ID ATRIBUICAO ID
    (23) atribuicao -> . ID ATRIBUICAO INT
    (24) atribuicao -> . ID
    (25) atribuicao -> . ID ATRIBUICAO chamadaMetodo

    ID              shift and go to state 98

    atribuicao                     shift and go to state 45

state 105

    (38) parametrosReais -> ID VIRGULA parametrosReais .

    PARENTESE_R     reduce using rule 38 (parametrosReais -> ID VIRGULA parametrosReais .)


state 106

    (40) parametrosReais -> INT VIRGULA parametrosReais .

    PARENTESE_R     reduce using rule 40 (parametrosReais -> INT VIRGULA parametrosReais .)


state 107

    (119) exp13 -> PARENTESE_L . exp1 PARENTESE_R
    (81) exp1 -> . exp1 ATRIBUICAO exp2
    (82) exp1 -> . exp2
    (83) exp2 -> . exp2 OR exp3
    (84) exp2 -> . exp3
    (85) exp3 -> . exp3 AND exp4
    (86) exp3 -> . exp4
    (87) exp4 -> . exp4 BIT_OR exp5
    (88) exp4 -> . exp5
    (89) exp5 -> . exp5 XOR exp6
    (90) exp5 -> . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp1                           shift and go to state 137
    exp2                           shift and go to state 109
    exp3                           shift and go to state 110
    exp4                           shift and go to state 111
    exp5                           shift and go to state 112
    exp6                           shift and go to state 113
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 108

    (48) comandos1 -> IF PARENTESE_L exp1 . PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> IF PARENTESE_L exp1 . PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> IF PARENTESE_L exp1 . PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> IF PARENTESE_L exp1 . PARENTESE_R bloco ELSE bloco
    (54) comandos2 -> IF PARENTESE_L exp1 . PARENTESE_R comandos
    (55) comandos2 -> IF PARENTESE_L exp1 . PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> IF PARENTESE_L exp1 . PARENTESE_R bloco
    (57) comandos2 -> IF PARENTESE_L exp1 . PARENTESE_R bloco ELSE comandos2
    (81) exp1 -> exp1 . ATRIBUICAO exp2

    PARENTESE_R     shift and go to state 138
    ATRIBUICAO      shift and go to state 139


state 109

    (82) exp1 -> exp2 .
    (83) exp2 -> exp2 . OR exp3

    PARENTESE_R     reduce using rule 82 (exp1 -> exp2 .)
    ATRIBUICAO      reduce using rule 82 (exp1 -> exp2 .)
    PONTO_VIRGULA   reduce using rule 82 (exp1 -> exp2 .)
    OR              shift and go to state 140


state 110

    (84) exp2 -> exp3 .
    (85) exp3 -> exp3 . AND exp4

    OR              reduce using rule 84 (exp2 -> exp3 .)
    PARENTESE_R     reduce using rule 84 (exp2 -> exp3 .)
    ATRIBUICAO      reduce using rule 84 (exp2 -> exp3 .)
    PONTO_VIRGULA   reduce using rule 84 (exp2 -> exp3 .)
    AND             shift and go to state 141


state 111

    (86) exp3 -> exp4 .
    (87) exp4 -> exp4 . BIT_OR exp5

    AND             reduce using rule 86 (exp3 -> exp4 .)
    OR              reduce using rule 86 (exp3 -> exp4 .)
    PARENTESE_R     reduce using rule 86 (exp3 -> exp4 .)
    ATRIBUICAO      reduce using rule 86 (exp3 -> exp4 .)
    PONTO_VIRGULA   reduce using rule 86 (exp3 -> exp4 .)
    BIT_OR          shift and go to state 142


state 112

    (88) exp4 -> exp5 .
    (89) exp5 -> exp5 . XOR exp6

    BIT_OR          reduce using rule 88 (exp4 -> exp5 .)
    AND             reduce using rule 88 (exp4 -> exp5 .)
    OR              reduce using rule 88 (exp4 -> exp5 .)
    PARENTESE_R     reduce using rule 88 (exp4 -> exp5 .)
    ATRIBUICAO      reduce using rule 88 (exp4 -> exp5 .)
    PONTO_VIRGULA   reduce using rule 88 (exp4 -> exp5 .)
    XOR             shift and go to state 143


state 113

    (90) exp5 -> exp6 .
    (91) exp6 -> exp6 . BIT_AND exp7

    XOR             reduce using rule 90 (exp5 -> exp6 .)
    BIT_OR          reduce using rule 90 (exp5 -> exp6 .)
    AND             reduce using rule 90 (exp5 -> exp6 .)
    OR              reduce using rule 90 (exp5 -> exp6 .)
    PARENTESE_R     reduce using rule 90 (exp5 -> exp6 .)
    ATRIBUICAO      reduce using rule 90 (exp5 -> exp6 .)
    PONTO_VIRGULA   reduce using rule 90 (exp5 -> exp6 .)
    BIT_AND         shift and go to state 144


state 114

    (92) exp6 -> exp7 .
    (93) exp7 -> exp7 . IGUAL exp8
    (94) exp7 -> exp7 . DIFERENTE exp8

    BIT_AND         reduce using rule 92 (exp6 -> exp7 .)
    XOR             reduce using rule 92 (exp6 -> exp7 .)
    BIT_OR          reduce using rule 92 (exp6 -> exp7 .)
    AND             reduce using rule 92 (exp6 -> exp7 .)
    OR              reduce using rule 92 (exp6 -> exp7 .)
    PARENTESE_R     reduce using rule 92 (exp6 -> exp7 .)
    ATRIBUICAO      reduce using rule 92 (exp6 -> exp7 .)
    PONTO_VIRGULA   reduce using rule 92 (exp6 -> exp7 .)
    IGUAL           shift and go to state 145
    DIFERENTE       shift and go to state 146


state 115

    (95) exp7 -> exp8 .
    (96) exp8 -> exp8 . MENOR exp9
    (97) exp8 -> exp8 . MENOR_IGUAL exp9
    (98) exp8 -> exp8 . MAIOR exp9
    (99) exp8 -> exp8 . MAIOR_IGUAL exp9

    IGUAL           reduce using rule 95 (exp7 -> exp8 .)
    DIFERENTE       reduce using rule 95 (exp7 -> exp8 .)
    BIT_AND         reduce using rule 95 (exp7 -> exp8 .)
    XOR             reduce using rule 95 (exp7 -> exp8 .)
    BIT_OR          reduce using rule 95 (exp7 -> exp8 .)
    AND             reduce using rule 95 (exp7 -> exp8 .)
    OR              reduce using rule 95 (exp7 -> exp8 .)
    PARENTESE_R     reduce using rule 95 (exp7 -> exp8 .)
    ATRIBUICAO      reduce using rule 95 (exp7 -> exp8 .)
    PONTO_VIRGULA   reduce using rule 95 (exp7 -> exp8 .)
    MENOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR           shift and go to state 149
    MAIOR_IGUAL     shift and go to state 150


state 116

    (100) exp8 -> exp9 .
    (101) exp9 -> exp9 . SOMA exp10
    (102) exp9 -> exp9 . SUB exp10

    MENOR           reduce using rule 100 (exp8 -> exp9 .)
    MENOR_IGUAL     reduce using rule 100 (exp8 -> exp9 .)
    MAIOR           reduce using rule 100 (exp8 -> exp9 .)
    MAIOR_IGUAL     reduce using rule 100 (exp8 -> exp9 .)
    IGUAL           reduce using rule 100 (exp8 -> exp9 .)
    DIFERENTE       reduce using rule 100 (exp8 -> exp9 .)
    BIT_AND         reduce using rule 100 (exp8 -> exp9 .)
    XOR             reduce using rule 100 (exp8 -> exp9 .)
    BIT_OR          reduce using rule 100 (exp8 -> exp9 .)
    AND             reduce using rule 100 (exp8 -> exp9 .)
    OR              reduce using rule 100 (exp8 -> exp9 .)
    PARENTESE_R     reduce using rule 100 (exp8 -> exp9 .)
    ATRIBUICAO      reduce using rule 100 (exp8 -> exp9 .)
    PONTO_VIRGULA   reduce using rule 100 (exp8 -> exp9 .)
    SOMA            shift and go to state 151
    SUB             shift and go to state 152


state 117

    (103) exp9 -> exp10 .
    (104) exp10 -> exp10 . MUL exp11
    (105) exp10 -> exp10 . DIV exp11

    SOMA            reduce using rule 103 (exp9 -> exp10 .)
    SUB             reduce using rule 103 (exp9 -> exp10 .)
    MENOR           reduce using rule 103 (exp9 -> exp10 .)
    MENOR_IGUAL     reduce using rule 103 (exp9 -> exp10 .)
    MAIOR           reduce using rule 103 (exp9 -> exp10 .)
    MAIOR_IGUAL     reduce using rule 103 (exp9 -> exp10 .)
    IGUAL           reduce using rule 103 (exp9 -> exp10 .)
    DIFERENTE       reduce using rule 103 (exp9 -> exp10 .)
    BIT_AND         reduce using rule 103 (exp9 -> exp10 .)
    XOR             reduce using rule 103 (exp9 -> exp10 .)
    BIT_OR          reduce using rule 103 (exp9 -> exp10 .)
    AND             reduce using rule 103 (exp9 -> exp10 .)
    OR              reduce using rule 103 (exp9 -> exp10 .)
    PARENTESE_R     reduce using rule 103 (exp9 -> exp10 .)
    ATRIBUICAO      reduce using rule 103 (exp9 -> exp10 .)
    PONTO_VIRGULA   reduce using rule 103 (exp9 -> exp10 .)
    MUL             shift and go to state 153
    DIV             shift and go to state 154


state 118

    (106) exp10 -> exp11 .

    MUL             reduce using rule 106 (exp10 -> exp11 .)
    DIV             reduce using rule 106 (exp10 -> exp11 .)
    SOMA            reduce using rule 106 (exp10 -> exp11 .)
    SUB             reduce using rule 106 (exp10 -> exp11 .)
    MENOR           reduce using rule 106 (exp10 -> exp11 .)
    MENOR_IGUAL     reduce using rule 106 (exp10 -> exp11 .)
    MAIOR           reduce using rule 106 (exp10 -> exp11 .)
    MAIOR_IGUAL     reduce using rule 106 (exp10 -> exp11 .)
    IGUAL           reduce using rule 106 (exp10 -> exp11 .)
    DIFERENTE       reduce using rule 106 (exp10 -> exp11 .)
    BIT_AND         reduce using rule 106 (exp10 -> exp11 .)
    XOR             reduce using rule 106 (exp10 -> exp11 .)
    BIT_OR          reduce using rule 106 (exp10 -> exp11 .)
    AND             reduce using rule 106 (exp10 -> exp11 .)
    OR              reduce using rule 106 (exp10 -> exp11 .)
    PARENTESE_R     reduce using rule 106 (exp10 -> exp11 .)
    ATRIBUICAO      reduce using rule 106 (exp10 -> exp11 .)
    PONTO_VIRGULA   reduce using rule 106 (exp10 -> exp11 .)


state 119

    (107) exp11 -> BIT_NOT . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp12                          shift and go to state 155
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 120

    (109) exp11 -> exp12 .
    (110) exp12 -> exp12 . INCREMENTO
    (111) exp12 -> exp12 . DECREMENTO

    MUL             reduce using rule 109 (exp11 -> exp12 .)
    DIV             reduce using rule 109 (exp11 -> exp12 .)
    SOMA            reduce using rule 109 (exp11 -> exp12 .)
    SUB             reduce using rule 109 (exp11 -> exp12 .)
    MENOR           reduce using rule 109 (exp11 -> exp12 .)
    MENOR_IGUAL     reduce using rule 109 (exp11 -> exp12 .)
    MAIOR           reduce using rule 109 (exp11 -> exp12 .)
    MAIOR_IGUAL     reduce using rule 109 (exp11 -> exp12 .)
    IGUAL           reduce using rule 109 (exp11 -> exp12 .)
    DIFERENTE       reduce using rule 109 (exp11 -> exp12 .)
    BIT_AND         reduce using rule 109 (exp11 -> exp12 .)
    XOR             reduce using rule 109 (exp11 -> exp12 .)
    BIT_OR          reduce using rule 109 (exp11 -> exp12 .)
    AND             reduce using rule 109 (exp11 -> exp12 .)
    OR              reduce using rule 109 (exp11 -> exp12 .)
    PARENTESE_R     reduce using rule 109 (exp11 -> exp12 .)
    ATRIBUICAO      reduce using rule 109 (exp11 -> exp12 .)
    PONTO_VIRGULA   reduce using rule 109 (exp11 -> exp12 .)
    INCREMENTO      shift and go to state 156
    DECREMENTO      shift and go to state 157


state 121

    (108) exp11 -> NOT . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp12                          shift and go to state 158
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 122

    (112) exp12 -> exp13 .

    INCREMENTO      reduce using rule 112 (exp12 -> exp13 .)
    DECREMENTO      reduce using rule 112 (exp12 -> exp13 .)
    MUL             reduce using rule 112 (exp12 -> exp13 .)
    DIV             reduce using rule 112 (exp12 -> exp13 .)
    SOMA            reduce using rule 112 (exp12 -> exp13 .)
    SUB             reduce using rule 112 (exp12 -> exp13 .)
    MENOR           reduce using rule 112 (exp12 -> exp13 .)
    MENOR_IGUAL     reduce using rule 112 (exp12 -> exp13 .)
    MAIOR           reduce using rule 112 (exp12 -> exp13 .)
    MAIOR_IGUAL     reduce using rule 112 (exp12 -> exp13 .)
    IGUAL           reduce using rule 112 (exp12 -> exp13 .)
    DIFERENTE       reduce using rule 112 (exp12 -> exp13 .)
    BIT_AND         reduce using rule 112 (exp12 -> exp13 .)
    XOR             reduce using rule 112 (exp12 -> exp13 .)
    BIT_OR          reduce using rule 112 (exp12 -> exp13 .)
    AND             reduce using rule 112 (exp12 -> exp13 .)
    OR              reduce using rule 112 (exp12 -> exp13 .)
    PARENTESE_R     reduce using rule 112 (exp12 -> exp13 .)
    ATRIBUICAO      reduce using rule 112 (exp12 -> exp13 .)
    PONTO_VIRGULA   reduce using rule 112 (exp12 -> exp13 .)


state 123

    (113) exp13 -> TRUE .

    INCREMENTO      reduce using rule 113 (exp13 -> TRUE .)
    DECREMENTO      reduce using rule 113 (exp13 -> TRUE .)
    MUL             reduce using rule 113 (exp13 -> TRUE .)
    DIV             reduce using rule 113 (exp13 -> TRUE .)
    SOMA            reduce using rule 113 (exp13 -> TRUE .)
    SUB             reduce using rule 113 (exp13 -> TRUE .)
    MENOR           reduce using rule 113 (exp13 -> TRUE .)
    MENOR_IGUAL     reduce using rule 113 (exp13 -> TRUE .)
    MAIOR           reduce using rule 113 (exp13 -> TRUE .)
    MAIOR_IGUAL     reduce using rule 113 (exp13 -> TRUE .)
    IGUAL           reduce using rule 113 (exp13 -> TRUE .)
    DIFERENTE       reduce using rule 113 (exp13 -> TRUE .)
    BIT_AND         reduce using rule 113 (exp13 -> TRUE .)
    XOR             reduce using rule 113 (exp13 -> TRUE .)
    BIT_OR          reduce using rule 113 (exp13 -> TRUE .)
    AND             reduce using rule 113 (exp13 -> TRUE .)
    OR              reduce using rule 113 (exp13 -> TRUE .)
    PARENTESE_R     reduce using rule 113 (exp13 -> TRUE .)
    ATRIBUICAO      reduce using rule 113 (exp13 -> TRUE .)
    PONTO_VIRGULA   reduce using rule 113 (exp13 -> TRUE .)


state 124

    (114) exp13 -> FALSE .

    INCREMENTO      reduce using rule 114 (exp13 -> FALSE .)
    DECREMENTO      reduce using rule 114 (exp13 -> FALSE .)
    MUL             reduce using rule 114 (exp13 -> FALSE .)
    DIV             reduce using rule 114 (exp13 -> FALSE .)
    SOMA            reduce using rule 114 (exp13 -> FALSE .)
    SUB             reduce using rule 114 (exp13 -> FALSE .)
    MENOR           reduce using rule 114 (exp13 -> FALSE .)
    MENOR_IGUAL     reduce using rule 114 (exp13 -> FALSE .)
    MAIOR           reduce using rule 114 (exp13 -> FALSE .)
    MAIOR_IGUAL     reduce using rule 114 (exp13 -> FALSE .)
    IGUAL           reduce using rule 114 (exp13 -> FALSE .)
    DIFERENTE       reduce using rule 114 (exp13 -> FALSE .)
    BIT_AND         reduce using rule 114 (exp13 -> FALSE .)
    XOR             reduce using rule 114 (exp13 -> FALSE .)
    BIT_OR          reduce using rule 114 (exp13 -> FALSE .)
    AND             reduce using rule 114 (exp13 -> FALSE .)
    OR              reduce using rule 114 (exp13 -> FALSE .)
    PARENTESE_R     reduce using rule 114 (exp13 -> FALSE .)
    ATRIBUICAO      reduce using rule 114 (exp13 -> FALSE .)
    PONTO_VIRGULA   reduce using rule 114 (exp13 -> FALSE .)


state 125

    (115) exp13 -> STRING .

    INCREMENTO      reduce using rule 115 (exp13 -> STRING .)
    DECREMENTO      reduce using rule 115 (exp13 -> STRING .)
    MUL             reduce using rule 115 (exp13 -> STRING .)
    DIV             reduce using rule 115 (exp13 -> STRING .)
    SOMA            reduce using rule 115 (exp13 -> STRING .)
    SUB             reduce using rule 115 (exp13 -> STRING .)
    MENOR           reduce using rule 115 (exp13 -> STRING .)
    MENOR_IGUAL     reduce using rule 115 (exp13 -> STRING .)
    MAIOR           reduce using rule 115 (exp13 -> STRING .)
    MAIOR_IGUAL     reduce using rule 115 (exp13 -> STRING .)
    IGUAL           reduce using rule 115 (exp13 -> STRING .)
    DIFERENTE       reduce using rule 115 (exp13 -> STRING .)
    BIT_AND         reduce using rule 115 (exp13 -> STRING .)
    XOR             reduce using rule 115 (exp13 -> STRING .)
    BIT_OR          reduce using rule 115 (exp13 -> STRING .)
    AND             reduce using rule 115 (exp13 -> STRING .)
    OR              reduce using rule 115 (exp13 -> STRING .)
    PARENTESE_R     reduce using rule 115 (exp13 -> STRING .)
    ATRIBUICAO      reduce using rule 115 (exp13 -> STRING .)
    PONTO_VIRGULA   reduce using rule 115 (exp13 -> STRING .)


state 126

    (116) exp13 -> ID .
    (36) chamadaMetodo -> ID . PARENTESE_L parametrosReais PARENTESE_R

    INCREMENTO      reduce using rule 116 (exp13 -> ID .)
    DECREMENTO      reduce using rule 116 (exp13 -> ID .)
    MUL             reduce using rule 116 (exp13 -> ID .)
    DIV             reduce using rule 116 (exp13 -> ID .)
    SOMA            reduce using rule 116 (exp13 -> ID .)
    SUB             reduce using rule 116 (exp13 -> ID .)
    MENOR           reduce using rule 116 (exp13 -> ID .)
    MENOR_IGUAL     reduce using rule 116 (exp13 -> ID .)
    MAIOR           reduce using rule 116 (exp13 -> ID .)
    MAIOR_IGUAL     reduce using rule 116 (exp13 -> ID .)
    IGUAL           reduce using rule 116 (exp13 -> ID .)
    DIFERENTE       reduce using rule 116 (exp13 -> ID .)
    BIT_AND         reduce using rule 116 (exp13 -> ID .)
    XOR             reduce using rule 116 (exp13 -> ID .)
    BIT_OR          reduce using rule 116 (exp13 -> ID .)
    AND             reduce using rule 116 (exp13 -> ID .)
    OR              reduce using rule 116 (exp13 -> ID .)
    PARENTESE_R     reduce using rule 116 (exp13 -> ID .)
    ATRIBUICAO      reduce using rule 116 (exp13 -> ID .)
    PONTO_VIRGULA   reduce using rule 116 (exp13 -> ID .)
    PARENTESE_L     shift and go to state 61


state 127

    (117) exp13 -> chamadaMetodo .

    INCREMENTO      reduce using rule 117 (exp13 -> chamadaMetodo .)
    DECREMENTO      reduce using rule 117 (exp13 -> chamadaMetodo .)
    MUL             reduce using rule 117 (exp13 -> chamadaMetodo .)
    DIV             reduce using rule 117 (exp13 -> chamadaMetodo .)
    SOMA            reduce using rule 117 (exp13 -> chamadaMetodo .)
    SUB             reduce using rule 117 (exp13 -> chamadaMetodo .)
    MENOR           reduce using rule 117 (exp13 -> chamadaMetodo .)
    MENOR_IGUAL     reduce using rule 117 (exp13 -> chamadaMetodo .)
    MAIOR           reduce using rule 117 (exp13 -> chamadaMetodo .)
    MAIOR_IGUAL     reduce using rule 117 (exp13 -> chamadaMetodo .)
    IGUAL           reduce using rule 117 (exp13 -> chamadaMetodo .)
    DIFERENTE       reduce using rule 117 (exp13 -> chamadaMetodo .)
    BIT_AND         reduce using rule 117 (exp13 -> chamadaMetodo .)
    XOR             reduce using rule 117 (exp13 -> chamadaMetodo .)
    BIT_OR          reduce using rule 117 (exp13 -> chamadaMetodo .)
    AND             reduce using rule 117 (exp13 -> chamadaMetodo .)
    OR              reduce using rule 117 (exp13 -> chamadaMetodo .)
    PARENTESE_R     reduce using rule 117 (exp13 -> chamadaMetodo .)
    ATRIBUICAO      reduce using rule 117 (exp13 -> chamadaMetodo .)
    PONTO_VIRGULA   reduce using rule 117 (exp13 -> chamadaMetodo .)


state 128

    (118) exp13 -> INT .

    INCREMENTO      reduce using rule 118 (exp13 -> INT .)
    DECREMENTO      reduce using rule 118 (exp13 -> INT .)
    MUL             reduce using rule 118 (exp13 -> INT .)
    DIV             reduce using rule 118 (exp13 -> INT .)
    SOMA            reduce using rule 118 (exp13 -> INT .)
    SUB             reduce using rule 118 (exp13 -> INT .)
    MENOR           reduce using rule 118 (exp13 -> INT .)
    MENOR_IGUAL     reduce using rule 118 (exp13 -> INT .)
    MAIOR           reduce using rule 118 (exp13 -> INT .)
    MAIOR_IGUAL     reduce using rule 118 (exp13 -> INT .)
    IGUAL           reduce using rule 118 (exp13 -> INT .)
    DIFERENTE       reduce using rule 118 (exp13 -> INT .)
    BIT_AND         reduce using rule 118 (exp13 -> INT .)
    XOR             reduce using rule 118 (exp13 -> INT .)
    BIT_OR          reduce using rule 118 (exp13 -> INT .)
    AND             reduce using rule 118 (exp13 -> INT .)
    OR              reduce using rule 118 (exp13 -> INT .)
    PARENTESE_R     reduce using rule 118 (exp13 -> INT .)
    ATRIBUICAO      reduce using rule 118 (exp13 -> INT .)
    PONTO_VIRGULA   reduce using rule 118 (exp13 -> INT .)


state 129

    (63) for1 -> FOR PARENTESE_L tipo . atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> FOR PARENTESE_L tipo . atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (67) for2 -> FOR PARENTESE_L tipo . atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (22) atribuicao -> . ID ATRIBUICAO ID
    (23) atribuicao -> . ID ATRIBUICAO INT
    (24) atribuicao -> . ID
    (25) atribuicao -> . ID ATRIBUICAO chamadaMetodo

    ID              shift and go to state 98

    atribuicao                     shift and go to state 159

state 130

    (64) for1 -> FOR PARENTESE_L atribuicao . PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (66) for1 -> FOR PARENTESE_L atribuicao . PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (68) for2 -> FOR PARENTESE_L atribuicao . PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2

    PONTO_VIRGULA   shift and go to state 160


state 131

    (34) tipo -> ID .
    (22) atribuicao -> ID . ATRIBUICAO ID
    (23) atribuicao -> ID . ATRIBUICAO INT
    (24) atribuicao -> ID .
    (25) atribuicao -> ID . ATRIBUICAO chamadaMetodo

    ID              reduce using rule 34 (tipo -> ID .)
    ATRIBUICAO      shift and go to state 49
    PONTO_VIRGULA   reduce using rule 24 (atribuicao -> ID .)


state 132

    (72) foreach1 -> FOREACH PARENTESE_L tipo . ID IN ID PARENTESE_R bloco
    (74) foreach1 -> FOREACH PARENTESE_L tipo . ID IN ID PARENTESE_R comandos1
    (76) foreach2 -> FOREACH PARENTESE_L tipo . ID IN ID PARENTESE_R comandos2

    ID              shift and go to state 161


state 133

    (73) foreach1 -> FOREACH PARENTESE_L ID . IN ID PARENTESE_R bloco
    (75) foreach1 -> FOREACH PARENTESE_L ID . IN ID PARENTESE_R comandos1
    (77) foreach2 -> FOREACH PARENTESE_L ID . IN ID PARENTESE_R comandos2
    (34) tipo -> ID .

    IN              shift and go to state 162
    ID              reduce using rule 34 (tipo -> ID .)


state 134

    (69) while1 -> WHILE PARENTESE_L exp1 . PARENTESE_R bloco
    (70) while1 -> WHILE PARENTESE_L exp1 . PARENTESE_R comandos1
    (71) while2 -> WHILE PARENTESE_L exp1 . PARENTESE_R comandos2
    (81) exp1 -> exp1 . ATRIBUICAO exp2

    PARENTESE_R     shift and go to state 163
    ATRIBUICAO      shift and go to state 139


state 135

    (78) return -> RETURN ID PONTO_VIRGULA .

    CHAVE_R         reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)
    IF              reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)
    FOR             reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)
    FOREACH         reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)
    WHILE           reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)
    RETURN          reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)
    PUBLIC          reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)
    INT             reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)
    STRING          reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)
    ID              reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)
    BOOL            reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)
    ELSE            reduce using rule 78 (return -> RETURN ID PONTO_VIRGULA .)


state 136

    (79) return -> RETURN INT PONTO_VIRGULA .

    CHAVE_R         reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)
    IF              reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)
    FOR             reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)
    FOREACH         reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)
    WHILE           reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)
    RETURN          reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)
    PUBLIC          reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)
    INT             reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)
    STRING          reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)
    ID              reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)
    BOOL            reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)
    ELSE            reduce using rule 79 (return -> RETURN INT PONTO_VIRGULA .)


state 137

    (119) exp13 -> PARENTESE_L exp1 . PARENTESE_R
    (81) exp1 -> exp1 . ATRIBUICAO exp2

    PARENTESE_R     shift and go to state 164
    ATRIBUICAO      shift and go to state 139


state 138

    (48) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R . comandos1 ELSE comandos1
    (49) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R . bloco ELSE comandos1
    (50) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R . comandos1 ELSE bloco
    (51) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R . bloco ELSE bloco
    (54) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R . comandos
    (55) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R . comandos1 ELSE comandos2
    (56) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R . bloco
    (57) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R . bloco ELSE comandos2
    (43) comandos1 -> . for1
    (44) comandos1 -> . foreach1
    (45) comandos1 -> . while1
    (46) comandos1 -> . return
    (47) comandos1 -> . atributo
    (48) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
    (52) bloco -> . CHAVE_L corpoComando CHAVE_R
    (53) bloco -> . CHAVE_L CHAVE_R
    (41) comandos -> . comandos1
    (42) comandos -> . comandos2
    (63) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (72) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco
    (74) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1
    (69) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R bloco
    (70) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos1
    (78) return -> . RETURN ID PONTO_VIRGULA
    (79) return -> . RETURN INT PONTO_VIRGULA
    (80) return -> . RETURN PONTO_VIRGULA
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (54) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos
    (55) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco
    (57) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2
    (58) comandos2 -> . for2
    (59) comandos2 -> . while2
    (60) comandos2 -> . foreach2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL
    (67) for2 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (71) while2 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos2
    (76) foreach2 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2

    IF              shift and go to state 81
    CHAVE_L         shift and go to state 65
    FOR             shift and go to state 85
    FOREACH         shift and go to state 87
    WHILE           shift and go to state 88
    RETURN          shift and go to state 89
    PUBLIC          shift and go to state 90
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    comandos1                      shift and go to state 165
    bloco                          shift and go to state 166
    comandos                       shift and go to state 167
    comandos2                      shift and go to state 75
    for1                           shift and go to state 76
    foreach1                       shift and go to state 77
    while1                         shift and go to state 78
    return                         shift and go to state 79
    atributo                       shift and go to state 80
    tipo                           shift and go to state 86
    for2                           shift and go to state 82
    while2                         shift and go to state 83
    foreach2                       shift and go to state 84

state 139

    (81) exp1 -> exp1 ATRIBUICAO . exp2
    (83) exp2 -> . exp2 OR exp3
    (84) exp2 -> . exp3
    (85) exp3 -> . exp3 AND exp4
    (86) exp3 -> . exp4
    (87) exp4 -> . exp4 BIT_OR exp5
    (88) exp4 -> . exp5
    (89) exp5 -> . exp5 XOR exp6
    (90) exp5 -> . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp2                           shift and go to state 168
    exp3                           shift and go to state 110
    exp4                           shift and go to state 111
    exp5                           shift and go to state 112
    exp6                           shift and go to state 113
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 140

    (83) exp2 -> exp2 OR . exp3
    (85) exp3 -> . exp3 AND exp4
    (86) exp3 -> . exp4
    (87) exp4 -> . exp4 BIT_OR exp5
    (88) exp4 -> . exp5
    (89) exp5 -> . exp5 XOR exp6
    (90) exp5 -> . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp3                           shift and go to state 169
    exp4                           shift and go to state 111
    exp5                           shift and go to state 112
    exp6                           shift and go to state 113
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 141

    (85) exp3 -> exp3 AND . exp4
    (87) exp4 -> . exp4 BIT_OR exp5
    (88) exp4 -> . exp5
    (89) exp5 -> . exp5 XOR exp6
    (90) exp5 -> . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp4                           shift and go to state 170
    exp5                           shift and go to state 112
    exp6                           shift and go to state 113
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 142

    (87) exp4 -> exp4 BIT_OR . exp5
    (89) exp5 -> . exp5 XOR exp6
    (90) exp5 -> . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp5                           shift and go to state 171
    exp6                           shift and go to state 113
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 143

    (89) exp5 -> exp5 XOR . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp6                           shift and go to state 172
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 144

    (91) exp6 -> exp6 BIT_AND . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp7                           shift and go to state 173
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 145

    (93) exp7 -> exp7 IGUAL . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp8                           shift and go to state 174
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 146

    (94) exp7 -> exp7 DIFERENTE . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp8                           shift and go to state 175
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 147

    (96) exp8 -> exp8 MENOR . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp9                           shift and go to state 176
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 148

    (97) exp8 -> exp8 MENOR_IGUAL . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp9                           shift and go to state 177
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 149

    (98) exp8 -> exp8 MAIOR . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp9                           shift and go to state 178
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 150

    (99) exp8 -> exp8 MAIOR_IGUAL . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp9                           shift and go to state 179
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 151

    (101) exp9 -> exp9 SOMA . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp10                          shift and go to state 180
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 152

    (102) exp9 -> exp9 SUB . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp10                          shift and go to state 181
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 153

    (104) exp10 -> exp10 MUL . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp11                          shift and go to state 182
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 154

    (105) exp10 -> exp10 DIV . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp11                          shift and go to state 183
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 155

    (107) exp11 -> BIT_NOT exp12 .
    (110) exp12 -> exp12 . INCREMENTO
    (111) exp12 -> exp12 . DECREMENTO

    MUL             reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    DIV             reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    SOMA            reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    SUB             reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    MENOR           reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    MENOR_IGUAL     reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    MAIOR           reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    MAIOR_IGUAL     reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    IGUAL           reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    DIFERENTE       reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    BIT_AND         reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    XOR             reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    BIT_OR          reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    AND             reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    OR              reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    PARENTESE_R     reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    ATRIBUICAO      reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    PONTO_VIRGULA   reduce using rule 107 (exp11 -> BIT_NOT exp12 .)
    INCREMENTO      shift and go to state 156
    DECREMENTO      shift and go to state 157


state 156

    (110) exp12 -> exp12 INCREMENTO .

    INCREMENTO      reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    DECREMENTO      reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    MUL             reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    DIV             reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    SOMA            reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    SUB             reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    MENOR           reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    MENOR_IGUAL     reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    MAIOR           reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    MAIOR_IGUAL     reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    IGUAL           reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    DIFERENTE       reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    BIT_AND         reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    XOR             reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    BIT_OR          reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    AND             reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    OR              reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    PARENTESE_R     reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    ATRIBUICAO      reduce using rule 110 (exp12 -> exp12 INCREMENTO .)
    PONTO_VIRGULA   reduce using rule 110 (exp12 -> exp12 INCREMENTO .)


state 157

    (111) exp12 -> exp12 DECREMENTO .

    INCREMENTO      reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    DECREMENTO      reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    MUL             reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    DIV             reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    SOMA            reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    SUB             reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    MENOR           reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    MENOR_IGUAL     reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    MAIOR           reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    MAIOR_IGUAL     reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    IGUAL           reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    DIFERENTE       reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    BIT_AND         reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    XOR             reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    BIT_OR          reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    AND             reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    OR              reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    PARENTESE_R     reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    ATRIBUICAO      reduce using rule 111 (exp12 -> exp12 DECREMENTO .)
    PONTO_VIRGULA   reduce using rule 111 (exp12 -> exp12 DECREMENTO .)


state 158

    (108) exp11 -> NOT exp12 .
    (110) exp12 -> exp12 . INCREMENTO
    (111) exp12 -> exp12 . DECREMENTO

    MUL             reduce using rule 108 (exp11 -> NOT exp12 .)
    DIV             reduce using rule 108 (exp11 -> NOT exp12 .)
    SOMA            reduce using rule 108 (exp11 -> NOT exp12 .)
    SUB             reduce using rule 108 (exp11 -> NOT exp12 .)
    MENOR           reduce using rule 108 (exp11 -> NOT exp12 .)
    MENOR_IGUAL     reduce using rule 108 (exp11 -> NOT exp12 .)
    MAIOR           reduce using rule 108 (exp11 -> NOT exp12 .)
    MAIOR_IGUAL     reduce using rule 108 (exp11 -> NOT exp12 .)
    IGUAL           reduce using rule 108 (exp11 -> NOT exp12 .)
    DIFERENTE       reduce using rule 108 (exp11 -> NOT exp12 .)
    BIT_AND         reduce using rule 108 (exp11 -> NOT exp12 .)
    XOR             reduce using rule 108 (exp11 -> NOT exp12 .)
    BIT_OR          reduce using rule 108 (exp11 -> NOT exp12 .)
    AND             reduce using rule 108 (exp11 -> NOT exp12 .)
    OR              reduce using rule 108 (exp11 -> NOT exp12 .)
    PARENTESE_R     reduce using rule 108 (exp11 -> NOT exp12 .)
    ATRIBUICAO      reduce using rule 108 (exp11 -> NOT exp12 .)
    PONTO_VIRGULA   reduce using rule 108 (exp11 -> NOT exp12 .)
    INCREMENTO      shift and go to state 156
    DECREMENTO      shift and go to state 157


state 159

    (63) for1 -> FOR PARENTESE_L tipo atribuicao . PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> FOR PARENTESE_L tipo atribuicao . PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (67) for2 -> FOR PARENTESE_L tipo atribuicao . PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2

    PONTO_VIRGULA   shift and go to state 184


state 160

    (64) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA . exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (66) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA . exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (68) for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA . exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (81) exp1 -> . exp1 ATRIBUICAO exp2
    (82) exp1 -> . exp2
    (83) exp2 -> . exp2 OR exp3
    (84) exp2 -> . exp3
    (85) exp3 -> . exp3 AND exp4
    (86) exp3 -> . exp4
    (87) exp4 -> . exp4 BIT_OR exp5
    (88) exp4 -> . exp5
    (89) exp5 -> . exp5 XOR exp6
    (90) exp5 -> . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp1                           shift and go to state 185
    exp2                           shift and go to state 109
    exp3                           shift and go to state 110
    exp4                           shift and go to state 111
    exp5                           shift and go to state 112
    exp6                           shift and go to state 113
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 161

    (72) foreach1 -> FOREACH PARENTESE_L tipo ID . IN ID PARENTESE_R bloco
    (74) foreach1 -> FOREACH PARENTESE_L tipo ID . IN ID PARENTESE_R comandos1
    (76) foreach2 -> FOREACH PARENTESE_L tipo ID . IN ID PARENTESE_R comandos2

    IN              shift and go to state 186


state 162

    (73) foreach1 -> FOREACH PARENTESE_L ID IN . ID PARENTESE_R bloco
    (75) foreach1 -> FOREACH PARENTESE_L ID IN . ID PARENTESE_R comandos1
    (77) foreach2 -> FOREACH PARENTESE_L ID IN . ID PARENTESE_R comandos2

    ID              shift and go to state 187


state 163

    (69) while1 -> WHILE PARENTESE_L exp1 PARENTESE_R . bloco
    (70) while1 -> WHILE PARENTESE_L exp1 PARENTESE_R . comandos1
    (71) while2 -> WHILE PARENTESE_L exp1 PARENTESE_R . comandos2
    (52) bloco -> . CHAVE_L corpoComando CHAVE_R
    (53) bloco -> . CHAVE_L CHAVE_R
    (43) comandos1 -> . for1
    (44) comandos1 -> . foreach1
    (45) comandos1 -> . while1
    (46) comandos1 -> . return
    (47) comandos1 -> . atributo
    (48) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
    (54) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos
    (55) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco
    (57) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2
    (58) comandos2 -> . for2
    (59) comandos2 -> . while2
    (60) comandos2 -> . foreach2
    (63) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (72) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco
    (74) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1
    (69) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R bloco
    (70) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos1
    (78) return -> . RETURN ID PONTO_VIRGULA
    (79) return -> . RETURN INT PONTO_VIRGULA
    (80) return -> . RETURN PONTO_VIRGULA
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (67) for2 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (71) while2 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos2
    (76) foreach2 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    CHAVE_L         shift and go to state 65
    IF              shift and go to state 81
    FOR             shift and go to state 85
    FOREACH         shift and go to state 87
    WHILE           shift and go to state 88
    RETURN          shift and go to state 89
    PUBLIC          shift and go to state 90
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    bloco                          shift and go to state 188
    comandos1                      shift and go to state 189
    comandos2                      shift and go to state 190
    for1                           shift and go to state 76
    foreach1                       shift and go to state 77
    while1                         shift and go to state 78
    return                         shift and go to state 79
    atributo                       shift and go to state 80
    for2                           shift and go to state 82
    while2                         shift and go to state 83
    foreach2                       shift and go to state 84
    tipo                           shift and go to state 86

state 164

    (119) exp13 -> PARENTESE_L exp1 PARENTESE_R .

    INCREMENTO      reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    DECREMENTO      reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    MUL             reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    DIV             reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    SOMA            reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    SUB             reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    MENOR           reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    MENOR_IGUAL     reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    MAIOR           reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    MAIOR_IGUAL     reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    IGUAL           reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    DIFERENTE       reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    BIT_AND         reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    XOR             reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    BIT_OR          reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    AND             reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    OR              reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    PARENTESE_R     reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    ATRIBUICAO      reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)
    PONTO_VIRGULA   reduce using rule 119 (exp13 -> PARENTESE_L exp1 PARENTESE_R .)


state 165

    (48) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 . ELSE comandos1
    (50) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 . ELSE bloco
    (55) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 . ELSE comandos2
    (41) comandos -> comandos1 .

    ELSE            shift and go to state 191
    CHAVE_R         reduce using rule 41 (comandos -> comandos1 .)
    IF              reduce using rule 41 (comandos -> comandos1 .)
    FOR             reduce using rule 41 (comandos -> comandos1 .)
    FOREACH         reduce using rule 41 (comandos -> comandos1 .)
    WHILE           reduce using rule 41 (comandos -> comandos1 .)
    RETURN          reduce using rule 41 (comandos -> comandos1 .)
    PUBLIC          reduce using rule 41 (comandos -> comandos1 .)
    INT             reduce using rule 41 (comandos -> comandos1 .)
    STRING          reduce using rule 41 (comandos -> comandos1 .)
    ID              reduce using rule 41 (comandos -> comandos1 .)
    BOOL            reduce using rule 41 (comandos -> comandos1 .)


state 166

    (49) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco . ELSE comandos1
    (51) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco . ELSE bloco
    (56) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .
    (57) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco . ELSE comandos2

    ELSE            shift and go to state 192
    CHAVE_R         reduce using rule 56 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .)
    IF              reduce using rule 56 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .)
    FOR             reduce using rule 56 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .)
    FOREACH         reduce using rule 56 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .)
    WHILE           reduce using rule 56 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .)
    RETURN          reduce using rule 56 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .)
    PUBLIC          reduce using rule 56 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .)
    INT             reduce using rule 56 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .)
    STRING          reduce using rule 56 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .)
    ID              reduce using rule 56 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .)
    BOOL            reduce using rule 56 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco .)


state 167

    (54) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .

    CHAVE_R         reduce using rule 54 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .)
    IF              reduce using rule 54 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .)
    FOR             reduce using rule 54 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .)
    FOREACH         reduce using rule 54 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .)
    WHILE           reduce using rule 54 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .)
    RETURN          reduce using rule 54 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .)
    PUBLIC          reduce using rule 54 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .)
    INT             reduce using rule 54 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .)
    STRING          reduce using rule 54 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .)
    ID              reduce using rule 54 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .)
    BOOL            reduce using rule 54 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos .)


state 168

    (81) exp1 -> exp1 ATRIBUICAO exp2 .
    (83) exp2 -> exp2 . OR exp3

    PARENTESE_R     reduce using rule 81 (exp1 -> exp1 ATRIBUICAO exp2 .)
    ATRIBUICAO      reduce using rule 81 (exp1 -> exp1 ATRIBUICAO exp2 .)
    PONTO_VIRGULA   reduce using rule 81 (exp1 -> exp1 ATRIBUICAO exp2 .)
    OR              shift and go to state 140


state 169

    (83) exp2 -> exp2 OR exp3 .
    (85) exp3 -> exp3 . AND exp4

    OR              reduce using rule 83 (exp2 -> exp2 OR exp3 .)
    PARENTESE_R     reduce using rule 83 (exp2 -> exp2 OR exp3 .)
    ATRIBUICAO      reduce using rule 83 (exp2 -> exp2 OR exp3 .)
    PONTO_VIRGULA   reduce using rule 83 (exp2 -> exp2 OR exp3 .)
    AND             shift and go to state 141


state 170

    (85) exp3 -> exp3 AND exp4 .
    (87) exp4 -> exp4 . BIT_OR exp5

    AND             reduce using rule 85 (exp3 -> exp3 AND exp4 .)
    OR              reduce using rule 85 (exp3 -> exp3 AND exp4 .)
    PARENTESE_R     reduce using rule 85 (exp3 -> exp3 AND exp4 .)
    ATRIBUICAO      reduce using rule 85 (exp3 -> exp3 AND exp4 .)
    PONTO_VIRGULA   reduce using rule 85 (exp3 -> exp3 AND exp4 .)
    BIT_OR          shift and go to state 142


state 171

    (87) exp4 -> exp4 BIT_OR exp5 .
    (89) exp5 -> exp5 . XOR exp6

    BIT_OR          reduce using rule 87 (exp4 -> exp4 BIT_OR exp5 .)
    AND             reduce using rule 87 (exp4 -> exp4 BIT_OR exp5 .)
    OR              reduce using rule 87 (exp4 -> exp4 BIT_OR exp5 .)
    PARENTESE_R     reduce using rule 87 (exp4 -> exp4 BIT_OR exp5 .)
    ATRIBUICAO      reduce using rule 87 (exp4 -> exp4 BIT_OR exp5 .)
    PONTO_VIRGULA   reduce using rule 87 (exp4 -> exp4 BIT_OR exp5 .)
    XOR             shift and go to state 143


state 172

    (89) exp5 -> exp5 XOR exp6 .
    (91) exp6 -> exp6 . BIT_AND exp7

    XOR             reduce using rule 89 (exp5 -> exp5 XOR exp6 .)
    BIT_OR          reduce using rule 89 (exp5 -> exp5 XOR exp6 .)
    AND             reduce using rule 89 (exp5 -> exp5 XOR exp6 .)
    OR              reduce using rule 89 (exp5 -> exp5 XOR exp6 .)
    PARENTESE_R     reduce using rule 89 (exp5 -> exp5 XOR exp6 .)
    ATRIBUICAO      reduce using rule 89 (exp5 -> exp5 XOR exp6 .)
    PONTO_VIRGULA   reduce using rule 89 (exp5 -> exp5 XOR exp6 .)
    BIT_AND         shift and go to state 144


state 173

    (91) exp6 -> exp6 BIT_AND exp7 .
    (93) exp7 -> exp7 . IGUAL exp8
    (94) exp7 -> exp7 . DIFERENTE exp8

    BIT_AND         reduce using rule 91 (exp6 -> exp6 BIT_AND exp7 .)
    XOR             reduce using rule 91 (exp6 -> exp6 BIT_AND exp7 .)
    BIT_OR          reduce using rule 91 (exp6 -> exp6 BIT_AND exp7 .)
    AND             reduce using rule 91 (exp6 -> exp6 BIT_AND exp7 .)
    OR              reduce using rule 91 (exp6 -> exp6 BIT_AND exp7 .)
    PARENTESE_R     reduce using rule 91 (exp6 -> exp6 BIT_AND exp7 .)
    ATRIBUICAO      reduce using rule 91 (exp6 -> exp6 BIT_AND exp7 .)
    PONTO_VIRGULA   reduce using rule 91 (exp6 -> exp6 BIT_AND exp7 .)
    IGUAL           shift and go to state 145
    DIFERENTE       shift and go to state 146


state 174

    (93) exp7 -> exp7 IGUAL exp8 .
    (96) exp8 -> exp8 . MENOR exp9
    (97) exp8 -> exp8 . MENOR_IGUAL exp9
    (98) exp8 -> exp8 . MAIOR exp9
    (99) exp8 -> exp8 . MAIOR_IGUAL exp9

    IGUAL           reduce using rule 93 (exp7 -> exp7 IGUAL exp8 .)
    DIFERENTE       reduce using rule 93 (exp7 -> exp7 IGUAL exp8 .)
    BIT_AND         reduce using rule 93 (exp7 -> exp7 IGUAL exp8 .)
    XOR             reduce using rule 93 (exp7 -> exp7 IGUAL exp8 .)
    BIT_OR          reduce using rule 93 (exp7 -> exp7 IGUAL exp8 .)
    AND             reduce using rule 93 (exp7 -> exp7 IGUAL exp8 .)
    OR              reduce using rule 93 (exp7 -> exp7 IGUAL exp8 .)
    PARENTESE_R     reduce using rule 93 (exp7 -> exp7 IGUAL exp8 .)
    ATRIBUICAO      reduce using rule 93 (exp7 -> exp7 IGUAL exp8 .)
    PONTO_VIRGULA   reduce using rule 93 (exp7 -> exp7 IGUAL exp8 .)
    MENOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR           shift and go to state 149
    MAIOR_IGUAL     shift and go to state 150


state 175

    (94) exp7 -> exp7 DIFERENTE exp8 .
    (96) exp8 -> exp8 . MENOR exp9
    (97) exp8 -> exp8 . MENOR_IGUAL exp9
    (98) exp8 -> exp8 . MAIOR exp9
    (99) exp8 -> exp8 . MAIOR_IGUAL exp9

    IGUAL           reduce using rule 94 (exp7 -> exp7 DIFERENTE exp8 .)
    DIFERENTE       reduce using rule 94 (exp7 -> exp7 DIFERENTE exp8 .)
    BIT_AND         reduce using rule 94 (exp7 -> exp7 DIFERENTE exp8 .)
    XOR             reduce using rule 94 (exp7 -> exp7 DIFERENTE exp8 .)
    BIT_OR          reduce using rule 94 (exp7 -> exp7 DIFERENTE exp8 .)
    AND             reduce using rule 94 (exp7 -> exp7 DIFERENTE exp8 .)
    OR              reduce using rule 94 (exp7 -> exp7 DIFERENTE exp8 .)
    PARENTESE_R     reduce using rule 94 (exp7 -> exp7 DIFERENTE exp8 .)
    ATRIBUICAO      reduce using rule 94 (exp7 -> exp7 DIFERENTE exp8 .)
    PONTO_VIRGULA   reduce using rule 94 (exp7 -> exp7 DIFERENTE exp8 .)
    MENOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR           shift and go to state 149
    MAIOR_IGUAL     shift and go to state 150


state 176

    (96) exp8 -> exp8 MENOR exp9 .
    (101) exp9 -> exp9 . SOMA exp10
    (102) exp9 -> exp9 . SUB exp10

    MENOR           reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    MENOR_IGUAL     reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    MAIOR           reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    MAIOR_IGUAL     reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    IGUAL           reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    DIFERENTE       reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    BIT_AND         reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    XOR             reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    BIT_OR          reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    AND             reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    OR              reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    PARENTESE_R     reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    ATRIBUICAO      reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    PONTO_VIRGULA   reduce using rule 96 (exp8 -> exp8 MENOR exp9 .)
    SOMA            shift and go to state 151
    SUB             shift and go to state 152


state 177

    (97) exp8 -> exp8 MENOR_IGUAL exp9 .
    (101) exp9 -> exp9 . SOMA exp10
    (102) exp9 -> exp9 . SUB exp10

    MENOR           reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    MENOR_IGUAL     reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    MAIOR           reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    MAIOR_IGUAL     reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    IGUAL           reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    DIFERENTE       reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    BIT_AND         reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    XOR             reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    BIT_OR          reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    AND             reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    OR              reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    PARENTESE_R     reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    ATRIBUICAO      reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    PONTO_VIRGULA   reduce using rule 97 (exp8 -> exp8 MENOR_IGUAL exp9 .)
    SOMA            shift and go to state 151
    SUB             shift and go to state 152


state 178

    (98) exp8 -> exp8 MAIOR exp9 .
    (101) exp9 -> exp9 . SOMA exp10
    (102) exp9 -> exp9 . SUB exp10

    MENOR           reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    MENOR_IGUAL     reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    MAIOR           reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    MAIOR_IGUAL     reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    IGUAL           reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    DIFERENTE       reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    BIT_AND         reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    XOR             reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    BIT_OR          reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    AND             reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    OR              reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    PARENTESE_R     reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    ATRIBUICAO      reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    PONTO_VIRGULA   reduce using rule 98 (exp8 -> exp8 MAIOR exp9 .)
    SOMA            shift and go to state 151
    SUB             shift and go to state 152


state 179

    (99) exp8 -> exp8 MAIOR_IGUAL exp9 .
    (101) exp9 -> exp9 . SOMA exp10
    (102) exp9 -> exp9 . SUB exp10

    MENOR           reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    MENOR_IGUAL     reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    MAIOR           reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    MAIOR_IGUAL     reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    IGUAL           reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    DIFERENTE       reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    BIT_AND         reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    XOR             reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    BIT_OR          reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    AND             reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    OR              reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    PARENTESE_R     reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    ATRIBUICAO      reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    PONTO_VIRGULA   reduce using rule 99 (exp8 -> exp8 MAIOR_IGUAL exp9 .)
    SOMA            shift and go to state 151
    SUB             shift and go to state 152


state 180

    (101) exp9 -> exp9 SOMA exp10 .
    (104) exp10 -> exp10 . MUL exp11
    (105) exp10 -> exp10 . DIV exp11

    SOMA            reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    SUB             reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    MENOR           reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    MENOR_IGUAL     reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    MAIOR           reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    MAIOR_IGUAL     reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    IGUAL           reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    DIFERENTE       reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    BIT_AND         reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    XOR             reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    BIT_OR          reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    AND             reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    OR              reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    PARENTESE_R     reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    ATRIBUICAO      reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    PONTO_VIRGULA   reduce using rule 101 (exp9 -> exp9 SOMA exp10 .)
    MUL             shift and go to state 153
    DIV             shift and go to state 154


state 181

    (102) exp9 -> exp9 SUB exp10 .
    (104) exp10 -> exp10 . MUL exp11
    (105) exp10 -> exp10 . DIV exp11

    SOMA            reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    SUB             reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    MENOR           reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    MENOR_IGUAL     reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    MAIOR           reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    MAIOR_IGUAL     reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    IGUAL           reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    DIFERENTE       reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    BIT_AND         reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    XOR             reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    BIT_OR          reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    AND             reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    OR              reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    PARENTESE_R     reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    ATRIBUICAO      reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    PONTO_VIRGULA   reduce using rule 102 (exp9 -> exp9 SUB exp10 .)
    MUL             shift and go to state 153
    DIV             shift and go to state 154


state 182

    (104) exp10 -> exp10 MUL exp11 .

    MUL             reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    DIV             reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    SOMA            reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    SUB             reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    MENOR           reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    MENOR_IGUAL     reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    MAIOR           reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    MAIOR_IGUAL     reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    IGUAL           reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    DIFERENTE       reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    BIT_AND         reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    XOR             reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    BIT_OR          reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    AND             reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    OR              reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    PARENTESE_R     reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    ATRIBUICAO      reduce using rule 104 (exp10 -> exp10 MUL exp11 .)
    PONTO_VIRGULA   reduce using rule 104 (exp10 -> exp10 MUL exp11 .)


state 183

    (105) exp10 -> exp10 DIV exp11 .

    MUL             reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    DIV             reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    SOMA            reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    SUB             reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    MENOR           reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    MENOR_IGUAL     reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    MAIOR           reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    MAIOR_IGUAL     reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    IGUAL           reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    DIFERENTE       reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    BIT_AND         reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    XOR             reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    BIT_OR          reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    AND             reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    OR              reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    PARENTESE_R     reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    ATRIBUICAO      reduce using rule 105 (exp10 -> exp10 DIV exp11 .)
    PONTO_VIRGULA   reduce using rule 105 (exp10 -> exp10 DIV exp11 .)


state 184

    (63) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA . exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA . exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (67) for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA . exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (81) exp1 -> . exp1 ATRIBUICAO exp2
    (82) exp1 -> . exp2
    (83) exp2 -> . exp2 OR exp3
    (84) exp2 -> . exp3
    (85) exp3 -> . exp3 AND exp4
    (86) exp3 -> . exp4
    (87) exp4 -> . exp4 BIT_OR exp5
    (88) exp4 -> . exp5
    (89) exp5 -> . exp5 XOR exp6
    (90) exp5 -> . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp1                           shift and go to state 193
    exp2                           shift and go to state 109
    exp3                           shift and go to state 110
    exp4                           shift and go to state 111
    exp5                           shift and go to state 112
    exp6                           shift and go to state 113
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 185

    (64) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 . PONTO_VIRGULA exp1 PARENTESE_R bloco
    (66) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 . PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (68) for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 . PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (81) exp1 -> exp1 . ATRIBUICAO exp2

    PONTO_VIRGULA   shift and go to state 194
    ATRIBUICAO      shift and go to state 139


state 186

    (72) foreach1 -> FOREACH PARENTESE_L tipo ID IN . ID PARENTESE_R bloco
    (74) foreach1 -> FOREACH PARENTESE_L tipo ID IN . ID PARENTESE_R comandos1
    (76) foreach2 -> FOREACH PARENTESE_L tipo ID IN . ID PARENTESE_R comandos2

    ID              shift and go to state 195


state 187

    (73) foreach1 -> FOREACH PARENTESE_L ID IN ID . PARENTESE_R bloco
    (75) foreach1 -> FOREACH PARENTESE_L ID IN ID . PARENTESE_R comandos1
    (77) foreach2 -> FOREACH PARENTESE_L ID IN ID . PARENTESE_R comandos2

    PARENTESE_R     shift and go to state 196


state 188

    (69) while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .

    CHAVE_R         reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)
    IF              reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)
    FOR             reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)
    FOREACH         reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)
    WHILE           reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)
    RETURN          reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)
    PUBLIC          reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)
    INT             reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)
    STRING          reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)
    ID              reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)
    BOOL            reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)
    ELSE            reduce using rule 69 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R bloco .)


state 189

    (70) while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .

    CHAVE_R         reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)
    IF              reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)
    FOR             reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)
    FOREACH         reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)
    WHILE           reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)
    RETURN          reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)
    PUBLIC          reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)
    INT             reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)
    STRING          reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)
    ID              reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)
    BOOL            reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)
    ELSE            reduce using rule 70 (while1 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos1 .)


state 190

    (71) while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .

    CHAVE_R         reduce using rule 71 (while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .)
    IF              reduce using rule 71 (while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .)
    FOR             reduce using rule 71 (while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .)
    FOREACH         reduce using rule 71 (while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .)
    WHILE           reduce using rule 71 (while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .)
    RETURN          reduce using rule 71 (while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .)
    PUBLIC          reduce using rule 71 (while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .)
    INT             reduce using rule 71 (while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .)
    STRING          reduce using rule 71 (while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .)
    ID              reduce using rule 71 (while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .)
    BOOL            reduce using rule 71 (while2 -> WHILE PARENTESE_L exp1 PARENTESE_R comandos2 .)


state 191

    (48) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE . comandos1
    (50) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE . bloco
    (55) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE . comandos2
    (43) comandos1 -> . for1
    (44) comandos1 -> . foreach1
    (45) comandos1 -> . while1
    (46) comandos1 -> . return
    (47) comandos1 -> . atributo
    (48) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
    (52) bloco -> . CHAVE_L corpoComando CHAVE_R
    (53) bloco -> . CHAVE_L CHAVE_R
    (54) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos
    (55) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco
    (57) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2
    (58) comandos2 -> . for2
    (59) comandos2 -> . while2
    (60) comandos2 -> . foreach2
    (63) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (72) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco
    (74) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1
    (69) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R bloco
    (70) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos1
    (78) return -> . RETURN ID PONTO_VIRGULA
    (79) return -> . RETURN INT PONTO_VIRGULA
    (80) return -> . RETURN PONTO_VIRGULA
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (67) for2 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (71) while2 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos2
    (76) foreach2 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    IF              shift and go to state 81
    CHAVE_L         shift and go to state 65
    FOR             shift and go to state 85
    FOREACH         shift and go to state 87
    WHILE           shift and go to state 88
    RETURN          shift and go to state 89
    PUBLIC          shift and go to state 90
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    comandos1                      shift and go to state 197
    bloco                          shift and go to state 198
    comandos2                      shift and go to state 199
    for1                           shift and go to state 76
    foreach1                       shift and go to state 77
    while1                         shift and go to state 78
    return                         shift and go to state 79
    atributo                       shift and go to state 80
    for2                           shift and go to state 82
    while2                         shift and go to state 83
    foreach2                       shift and go to state 84
    tipo                           shift and go to state 86

state 192

    (49) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE . comandos1
    (51) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE . bloco
    (57) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE . comandos2
    (43) comandos1 -> . for1
    (44) comandos1 -> . foreach1
    (45) comandos1 -> . while1
    (46) comandos1 -> . return
    (47) comandos1 -> . atributo
    (48) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
    (52) bloco -> . CHAVE_L corpoComando CHAVE_R
    (53) bloco -> . CHAVE_L CHAVE_R
    (54) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos
    (55) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco
    (57) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2
    (58) comandos2 -> . for2
    (59) comandos2 -> . while2
    (60) comandos2 -> . foreach2
    (63) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (72) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco
    (74) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1
    (69) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R bloco
    (70) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos1
    (78) return -> . RETURN ID PONTO_VIRGULA
    (79) return -> . RETURN INT PONTO_VIRGULA
    (80) return -> . RETURN PONTO_VIRGULA
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (67) for2 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (71) while2 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos2
    (76) foreach2 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    IF              shift and go to state 81
    CHAVE_L         shift and go to state 65
    FOR             shift and go to state 85
    FOREACH         shift and go to state 87
    WHILE           shift and go to state 88
    RETURN          shift and go to state 89
    PUBLIC          shift and go to state 90
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    bloco                          shift and go to state 200
    comandos1                      shift and go to state 201
    comandos2                      shift and go to state 202
    for1                           shift and go to state 76
    foreach1                       shift and go to state 77
    while1                         shift and go to state 78
    return                         shift and go to state 79
    atributo                       shift and go to state 80
    for2                           shift and go to state 82
    while2                         shift and go to state 83
    foreach2                       shift and go to state 84
    tipo                           shift and go to state 86

state 193

    (63) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 . PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 . PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (67) for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 . PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (81) exp1 -> exp1 . ATRIBUICAO exp2

    PONTO_VIRGULA   shift and go to state 203
    ATRIBUICAO      shift and go to state 139


state 194

    (64) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA . exp1 PARENTESE_R bloco
    (66) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA . exp1 PARENTESE_R comandos1
    (68) for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA . exp1 PARENTESE_R comandos2
    (81) exp1 -> . exp1 ATRIBUICAO exp2
    (82) exp1 -> . exp2
    (83) exp2 -> . exp2 OR exp3
    (84) exp2 -> . exp3
    (85) exp3 -> . exp3 AND exp4
    (86) exp3 -> . exp4
    (87) exp4 -> . exp4 BIT_OR exp5
    (88) exp4 -> . exp5
    (89) exp5 -> . exp5 XOR exp6
    (90) exp5 -> . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp1                           shift and go to state 204
    exp2                           shift and go to state 109
    exp3                           shift and go to state 110
    exp4                           shift and go to state 111
    exp5                           shift and go to state 112
    exp6                           shift and go to state 113
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 195

    (72) foreach1 -> FOREACH PARENTESE_L tipo ID IN ID . PARENTESE_R bloco
    (74) foreach1 -> FOREACH PARENTESE_L tipo ID IN ID . PARENTESE_R comandos1
    (76) foreach2 -> FOREACH PARENTESE_L tipo ID IN ID . PARENTESE_R comandos2

    PARENTESE_R     shift and go to state 205


state 196

    (73) foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R . bloco
    (75) foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R . comandos1
    (77) foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R . comandos2
    (52) bloco -> . CHAVE_L corpoComando CHAVE_R
    (53) bloco -> . CHAVE_L CHAVE_R
    (43) comandos1 -> . for1
    (44) comandos1 -> . foreach1
    (45) comandos1 -> . while1
    (46) comandos1 -> . return
    (47) comandos1 -> . atributo
    (48) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
    (54) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos
    (55) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco
    (57) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2
    (58) comandos2 -> . for2
    (59) comandos2 -> . while2
    (60) comandos2 -> . foreach2
    (63) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (72) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco
    (74) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1
    (69) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R bloco
    (70) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos1
    (78) return -> . RETURN ID PONTO_VIRGULA
    (79) return -> . RETURN INT PONTO_VIRGULA
    (80) return -> . RETURN PONTO_VIRGULA
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (67) for2 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (71) while2 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos2
    (76) foreach2 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    CHAVE_L         shift and go to state 65
    IF              shift and go to state 81
    FOR             shift and go to state 85
    FOREACH         shift and go to state 87
    WHILE           shift and go to state 88
    RETURN          shift and go to state 89
    PUBLIC          shift and go to state 90
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    bloco                          shift and go to state 206
    comandos1                      shift and go to state 207
    comandos2                      shift and go to state 208
    for1                           shift and go to state 76
    foreach1                       shift and go to state 77
    while1                         shift and go to state 78
    return                         shift and go to state 79
    atributo                       shift and go to state 80
    for2                           shift and go to state 82
    while2                         shift and go to state 83
    foreach2                       shift and go to state 84
    tipo                           shift and go to state 86

state 197

    (48) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .

    CHAVE_R         reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)
    IF              reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)
    FOR             reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)
    FOREACH         reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)
    WHILE           reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)
    RETURN          reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)
    PUBLIC          reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)
    INT             reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)
    STRING          reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)
    ID              reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)
    BOOL            reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)
    ELSE            reduce using rule 48 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1 .)


state 198

    (50) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .

    CHAVE_R         reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)
    IF              reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)
    FOR             reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)
    FOREACH         reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)
    WHILE           reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)
    RETURN          reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)
    PUBLIC          reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)
    INT             reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)
    STRING          reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)
    ID              reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)
    BOOL            reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)
    ELSE            reduce using rule 50 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco .)


state 199

    (55) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .

    CHAVE_R         reduce using rule 55 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .)
    IF              reduce using rule 55 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .)
    FOR             reduce using rule 55 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .)
    FOREACH         reduce using rule 55 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .)
    WHILE           reduce using rule 55 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .)
    RETURN          reduce using rule 55 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .)
    PUBLIC          reduce using rule 55 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .)
    INT             reduce using rule 55 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .)
    STRING          reduce using rule 55 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .)
    ID              reduce using rule 55 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .)
    BOOL            reduce using rule 55 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2 .)


state 200

    (51) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .

    CHAVE_R         reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)
    IF              reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)
    FOR             reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)
    FOREACH         reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)
    WHILE           reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)
    RETURN          reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)
    PUBLIC          reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)
    INT             reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)
    STRING          reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)
    ID              reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)
    BOOL            reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)
    ELSE            reduce using rule 51 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco .)


state 201

    (49) comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .

    CHAVE_R         reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)
    IF              reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)
    FOR             reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)
    FOREACH         reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)
    WHILE           reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)
    RETURN          reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)
    PUBLIC          reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)
    INT             reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)
    STRING          reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)
    ID              reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)
    BOOL            reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)
    ELSE            reduce using rule 49 (comandos1 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1 .)


state 202

    (57) comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .

    CHAVE_R         reduce using rule 57 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .)
    IF              reduce using rule 57 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .)
    FOR             reduce using rule 57 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .)
    FOREACH         reduce using rule 57 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .)
    WHILE           reduce using rule 57 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .)
    RETURN          reduce using rule 57 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .)
    PUBLIC          reduce using rule 57 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .)
    INT             reduce using rule 57 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .)
    STRING          reduce using rule 57 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .)
    ID              reduce using rule 57 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .)
    BOOL            reduce using rule 57 (comandos2 -> IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2 .)


state 203

    (63) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA . exp1 PARENTESE_R bloco
    (65) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA . exp1 PARENTESE_R comandos1
    (67) for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA . exp1 PARENTESE_R comandos2
    (81) exp1 -> . exp1 ATRIBUICAO exp2
    (82) exp1 -> . exp2
    (83) exp2 -> . exp2 OR exp3
    (84) exp2 -> . exp3
    (85) exp3 -> . exp3 AND exp4
    (86) exp3 -> . exp4
    (87) exp4 -> . exp4 BIT_OR exp5
    (88) exp4 -> . exp5
    (89) exp5 -> . exp5 XOR exp6
    (90) exp5 -> . exp6
    (91) exp6 -> . exp6 BIT_AND exp7
    (92) exp6 -> . exp7
    (93) exp7 -> . exp7 IGUAL exp8
    (94) exp7 -> . exp7 DIFERENTE exp8
    (95) exp7 -> . exp8
    (96) exp8 -> . exp8 MENOR exp9
    (97) exp8 -> . exp8 MENOR_IGUAL exp9
    (98) exp8 -> . exp8 MAIOR exp9
    (99) exp8 -> . exp8 MAIOR_IGUAL exp9
    (100) exp8 -> . exp9
    (101) exp9 -> . exp9 SOMA exp10
    (102) exp9 -> . exp9 SUB exp10
    (103) exp9 -> . exp10
    (104) exp10 -> . exp10 MUL exp11
    (105) exp10 -> . exp10 DIV exp11
    (106) exp10 -> . exp11
    (107) exp11 -> . BIT_NOT exp12
    (108) exp11 -> . NOT exp12
    (109) exp11 -> . exp12
    (110) exp12 -> . exp12 INCREMENTO
    (111) exp12 -> . exp12 DECREMENTO
    (112) exp12 -> . exp13
    (113) exp13 -> . TRUE
    (114) exp13 -> . FALSE
    (115) exp13 -> . STRING
    (116) exp13 -> . ID
    (117) exp13 -> . chamadaMetodo
    (118) exp13 -> . INT
    (119) exp13 -> . PARENTESE_L exp1 PARENTESE_R
    (36) chamadaMetodo -> . ID PARENTESE_L parametrosReais PARENTESE_R

    BIT_NOT         shift and go to state 119
    NOT             shift and go to state 121
    TRUE            shift and go to state 123
    FALSE           shift and go to state 124
    STRING          shift and go to state 125
    ID              shift and go to state 126
    INT             shift and go to state 128
    PARENTESE_L     shift and go to state 107

    exp1                           shift and go to state 209
    exp2                           shift and go to state 109
    exp3                           shift and go to state 110
    exp4                           shift and go to state 111
    exp5                           shift and go to state 112
    exp6                           shift and go to state 113
    exp7                           shift and go to state 114
    exp8                           shift and go to state 115
    exp9                           shift and go to state 116
    exp10                          shift and go to state 117
    exp11                          shift and go to state 118
    exp12                          shift and go to state 120
    exp13                          shift and go to state 122
    chamadaMetodo                  shift and go to state 127

state 204

    (64) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 . PARENTESE_R bloco
    (66) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 . PARENTESE_R comandos1
    (68) for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 . PARENTESE_R comandos2
    (81) exp1 -> exp1 . ATRIBUICAO exp2

    PARENTESE_R     shift and go to state 210
    ATRIBUICAO      shift and go to state 139


state 205

    (72) foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R . bloco
    (74) foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R . comandos1
    (76) foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R . comandos2
    (52) bloco -> . CHAVE_L corpoComando CHAVE_R
    (53) bloco -> . CHAVE_L CHAVE_R
    (43) comandos1 -> . for1
    (44) comandos1 -> . foreach1
    (45) comandos1 -> . while1
    (46) comandos1 -> . return
    (47) comandos1 -> . atributo
    (48) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
    (54) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos
    (55) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco
    (57) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2
    (58) comandos2 -> . for2
    (59) comandos2 -> . while2
    (60) comandos2 -> . foreach2
    (63) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (72) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco
    (74) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1
    (69) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R bloco
    (70) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos1
    (78) return -> . RETURN ID PONTO_VIRGULA
    (79) return -> . RETURN INT PONTO_VIRGULA
    (80) return -> . RETURN PONTO_VIRGULA
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (67) for2 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (71) while2 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos2
    (76) foreach2 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    CHAVE_L         shift and go to state 65
    IF              shift and go to state 81
    FOR             shift and go to state 85
    FOREACH         shift and go to state 87
    WHILE           shift and go to state 88
    RETURN          shift and go to state 89
    PUBLIC          shift and go to state 90
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    tipo                           shift and go to state 86
    bloco                          shift and go to state 211
    comandos1                      shift and go to state 212
    comandos2                      shift and go to state 213
    for1                           shift and go to state 76
    foreach1                       shift and go to state 77
    while1                         shift and go to state 78
    return                         shift and go to state 79
    atributo                       shift and go to state 80
    for2                           shift and go to state 82
    while2                         shift and go to state 83
    foreach2                       shift and go to state 84

state 206

    (73) foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .

    CHAVE_R         reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)
    IF              reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)
    FOR             reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)
    FOREACH         reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)
    WHILE           reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)
    RETURN          reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)
    PUBLIC          reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)
    INT             reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)
    STRING          reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)
    ID              reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)
    BOOL            reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)
    ELSE            reduce using rule 73 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco .)


state 207

    (75) foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .

    CHAVE_R         reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)
    IF              reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)
    FOR             reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)
    FOREACH         reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)
    WHILE           reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)
    RETURN          reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)
    PUBLIC          reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)
    INT             reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)
    STRING          reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)
    ID              reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)
    BOOL            reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)
    ELSE            reduce using rule 75 (foreach1 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1 .)


state 208

    (77) foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .

    CHAVE_R         reduce using rule 77 (foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .)
    IF              reduce using rule 77 (foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .)
    FOR             reduce using rule 77 (foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .)
    FOREACH         reduce using rule 77 (foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .)
    WHILE           reduce using rule 77 (foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .)
    RETURN          reduce using rule 77 (foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .)
    PUBLIC          reduce using rule 77 (foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .)
    INT             reduce using rule 77 (foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .)
    STRING          reduce using rule 77 (foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .)
    ID              reduce using rule 77 (foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .)
    BOOL            reduce using rule 77 (foreach2 -> FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2 .)


state 209

    (63) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 . PARENTESE_R bloco
    (65) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 . PARENTESE_R comandos1
    (67) for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 . PARENTESE_R comandos2
    (81) exp1 -> exp1 . ATRIBUICAO exp2

    PARENTESE_R     shift and go to state 214
    ATRIBUICAO      shift and go to state 139


state 210

    (64) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R . bloco
    (66) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R . comandos1
    (68) for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R . comandos2
    (52) bloco -> . CHAVE_L corpoComando CHAVE_R
    (53) bloco -> . CHAVE_L CHAVE_R
    (43) comandos1 -> . for1
    (44) comandos1 -> . foreach1
    (45) comandos1 -> . while1
    (46) comandos1 -> . return
    (47) comandos1 -> . atributo
    (48) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
    (54) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos
    (55) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco
    (57) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2
    (58) comandos2 -> . for2
    (59) comandos2 -> . while2
    (60) comandos2 -> . foreach2
    (63) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (72) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco
    (74) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1
    (69) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R bloco
    (70) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos1
    (78) return -> . RETURN ID PONTO_VIRGULA
    (79) return -> . RETURN INT PONTO_VIRGULA
    (80) return -> . RETURN PONTO_VIRGULA
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (67) for2 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (71) while2 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos2
    (76) foreach2 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    CHAVE_L         shift and go to state 65
    IF              shift and go to state 81
    FOR             shift and go to state 85
    FOREACH         shift and go to state 87
    WHILE           shift and go to state 88
    RETURN          shift and go to state 89
    PUBLIC          shift and go to state 90
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    bloco                          shift and go to state 215
    comandos1                      shift and go to state 216
    comandos2                      shift and go to state 217
    for1                           shift and go to state 76
    foreach1                       shift and go to state 77
    while1                         shift and go to state 78
    return                         shift and go to state 79
    atributo                       shift and go to state 80
    for2                           shift and go to state 82
    while2                         shift and go to state 83
    foreach2                       shift and go to state 84
    tipo                           shift and go to state 86

state 211

    (72) foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .

    CHAVE_R         reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)
    IF              reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)
    FOR             reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)
    FOREACH         reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)
    WHILE           reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)
    RETURN          reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)
    PUBLIC          reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)
    INT             reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)
    STRING          reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)
    ID              reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)
    BOOL            reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)
    ELSE            reduce using rule 72 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco .)


state 212

    (74) foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .

    CHAVE_R         reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)
    IF              reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)
    FOR             reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)
    FOREACH         reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)
    WHILE           reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)
    RETURN          reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)
    PUBLIC          reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)
    INT             reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)
    STRING          reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)
    ID              reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)
    BOOL            reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)
    ELSE            reduce using rule 74 (foreach1 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1 .)


state 213

    (76) foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .

    CHAVE_R         reduce using rule 76 (foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .)
    IF              reduce using rule 76 (foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .)
    FOR             reduce using rule 76 (foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .)
    FOREACH         reduce using rule 76 (foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .)
    WHILE           reduce using rule 76 (foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .)
    RETURN          reduce using rule 76 (foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .)
    PUBLIC          reduce using rule 76 (foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .)
    INT             reduce using rule 76 (foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .)
    STRING          reduce using rule 76 (foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .)
    ID              reduce using rule 76 (foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .)
    BOOL            reduce using rule 76 (foreach2 -> FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2 .)


state 214

    (63) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R . bloco
    (65) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R . comandos1
    (67) for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R . comandos2
    (52) bloco -> . CHAVE_L corpoComando CHAVE_R
    (53) bloco -> . CHAVE_L CHAVE_R
    (43) comandos1 -> . for1
    (44) comandos1 -> . foreach1
    (45) comandos1 -> . while1
    (46) comandos1 -> . return
    (47) comandos1 -> . atributo
    (48) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos1
    (49) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos1
    (50) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE bloco
    (51) comandos1 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE bloco
    (54) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos
    (55) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R comandos1 ELSE comandos2
    (56) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco
    (57) comandos2 -> . IF PARENTESE_L exp1 PARENTESE_R bloco ELSE comandos2
    (58) comandos2 -> . for2
    (59) comandos2 -> . while2
    (60) comandos2 -> . foreach2
    (63) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (64) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco
    (65) for1 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (66) for1 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1
    (72) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R bloco
    (73) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R bloco
    (74) foreach1 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos1
    (75) foreach1 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos1
    (69) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R bloco
    (70) while1 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos1
    (78) return -> . RETURN ID PONTO_VIRGULA
    (79) return -> . RETURN INT PONTO_VIRGULA
    (80) return -> . RETURN PONTO_VIRGULA
    (20) atributo -> . PUBLIC tipo atribuicao PONTO_VIRGULA
    (21) atributo -> . tipo atribuicao PONTO_VIRGULA
    (67) for2 -> . FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (68) for2 -> . FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2
    (71) while2 -> . WHILE PARENTESE_L exp1 PARENTESE_R comandos2
    (76) foreach2 -> . FOREACH PARENTESE_L tipo ID IN ID PARENTESE_R comandos2
    (77) foreach2 -> . FOREACH PARENTESE_L ID IN ID PARENTESE_R comandos2
    (32) tipo -> . INT
    (33) tipo -> . STRING
    (34) tipo -> . ID
    (35) tipo -> . BOOL

    CHAVE_L         shift and go to state 65
    IF              shift and go to state 81
    FOR             shift and go to state 85
    FOREACH         shift and go to state 87
    WHILE           shift and go to state 88
    RETURN          shift and go to state 89
    PUBLIC          shift and go to state 90
    INT             shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 21
    BOOL            shift and go to state 30

    tipo                           shift and go to state 86
    bloco                          shift and go to state 218
    comandos1                      shift and go to state 219
    comandos2                      shift and go to state 220
    for1                           shift and go to state 76
    foreach1                       shift and go to state 77
    while1                         shift and go to state 78
    return                         shift and go to state 79
    atributo                       shift and go to state 80
    for2                           shift and go to state 82
    while2                         shift and go to state 83
    foreach2                       shift and go to state 84

state 215

    (64) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .

    CHAVE_R         reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    IF              reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    FOR             reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    FOREACH         reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    WHILE           reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    RETURN          reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    PUBLIC          reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    INT             reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    STRING          reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    ID              reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    BOOL            reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    ELSE            reduce using rule 64 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)


state 216

    (66) for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .

    CHAVE_R         reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    IF              reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    FOR             reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    FOREACH         reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    WHILE           reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    RETURN          reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    PUBLIC          reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    INT             reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    STRING          reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    ID              reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    BOOL            reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    ELSE            reduce using rule 66 (for1 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)


state 217

    (68) for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .

    CHAVE_R         reduce using rule 68 (for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    IF              reduce using rule 68 (for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    FOR             reduce using rule 68 (for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    FOREACH         reduce using rule 68 (for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    WHILE           reduce using rule 68 (for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    RETURN          reduce using rule 68 (for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    PUBLIC          reduce using rule 68 (for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    INT             reduce using rule 68 (for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    STRING          reduce using rule 68 (for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    ID              reduce using rule 68 (for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    BOOL            reduce using rule 68 (for2 -> FOR PARENTESE_L atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)


state 218

    (63) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .

    CHAVE_R         reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    IF              reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    FOR             reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    FOREACH         reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    WHILE           reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    RETURN          reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    PUBLIC          reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    INT             reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    STRING          reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    ID              reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    BOOL            reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)
    ELSE            reduce using rule 63 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R bloco .)


state 219

    (65) for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .

    CHAVE_R         reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    IF              reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    FOR             reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    FOREACH         reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    WHILE           reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    RETURN          reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    PUBLIC          reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    INT             reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    STRING          reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    ID              reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    BOOL            reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)
    ELSE            reduce using rule 65 (for1 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos1 .)


state 220

    (67) for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .

    CHAVE_R         reduce using rule 67 (for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    IF              reduce using rule 67 (for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    FOR             reduce using rule 67 (for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    FOREACH         reduce using rule 67 (for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    WHILE           reduce using rule 67 (for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    RETURN          reduce using rule 67 (for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    PUBLIC          reduce using rule 67 (for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    INT             reduce using rule 67 (for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    STRING          reduce using rule 67 (for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    ID              reduce using rule 67 (for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)
    BOOL            reduce using rule 67 (for2 -> FOR PARENTESE_L tipo atribuicao PONTO_VIRGULA exp1 PONTO_VIRGULA exp1 PARENTESE_R comandos2 .)

